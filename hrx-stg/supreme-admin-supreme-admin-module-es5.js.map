{"version":3,"sources":["webpack:///src/app/supreme-admin/freeemaildomain/edit-freeemaildomain/edit-freeemaildomain.component.ts","webpack:///src/app/supreme-admin/freeemaildomain/edit-freeemaildomain/edit-freeemaildomain.component.html","webpack:///src/app/supreme-admin/freeemaildomain/freeemaildomain.component.ts","webpack:///src/app/supreme-admin/freeemaildomain/freeemaildomain.component.html","webpack:///src/app/supreme-admin/freeemaildomain/freeemaildomain.service.ts","webpack:///src/app/supreme-admin/organization/organization.component.ts","webpack:///src/app/supreme-admin/organization/organization.component.html","webpack:///src/app/supreme-admin/organization/organization.service.ts","webpack:///src/app/supreme-admin/supreme-admin-routing.module.ts","webpack:///src/app/supreme-admin/supreme-admin.module.ts"],"names":["EditFreeemaildomainComponent","fEdomainService","sharedService","onClose","displayDialog","freeEmailDisplayDomain","showDialogToAdd","hiddenScroll","bodyElement","document","getElementById","classList","add","ex","clientErrorMsg","remove","isFEDomainExists","fEDomain","domainName","subscribe","res","statusCode","fEDomainType","addFEDomain","updateFEDomain","errLabel","message","freeEmailProviderDomainsDetailsId","status","error","severity","summary","detail","displayScroll","emit","type","modalClose","save","selector","templateUrl","styleUrls","FreeemaildomainComponent","confirmationService","FreeEmailDomainServices","fEDDisplay","loading","cols","field","header","getDomain","event","index","lstDomain","getAllFreeEmailDomain","responsePayload","undefined","rowData","confirm","accept","delete","deactivateFEDomain","activateFEDomain","data","handleChange","http","get","post","put","freeEmailDomain","providedIn","OrganizationComponent","organizationService","editemployeeDisplay","addemployeeDisplay","sendMessage","getOrganizations","lstOrganizations","getAllOrganizations","departmentType","deactivateOrganization","organizationDetailsId","activateOrganization","subject","trim","closeBtn","nativeElement","click","organization","sendMessageToOrganization","OrganizationService","routes","path","redirectTo","pathMatch","component","canDeactivate","SupremeAdminRoutingModule","forChild","imports","exports","SupremeAdminModule","declarations","providers"],"mappings":"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","file":"supreme-admin-supreme-admin-module-es5.js","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { FreeEmailDomain } from \"@app/shared/models/freeemaildomain.model\";\nimport { FreeEmailDomainServices } from \"../freeemaildomain.service\";\nimport { SharedService } from \"@app/shared/shared.service\";\n\n@Component({\n  selector: \"app-edit-freeemaildomain\",\n  templateUrl: \"./edit-freeemaildomain.component.html\",\n  styleUrls: [\"./edit-freeemaildomain.component.css\"],\n})\nexport class EditFreeemaildomainComponent implements OnInit {\n  @Input() fEDomainType: string;\n  @Output() onClose = new EventEmitter<any>();\n  displayDialog: boolean = true;\n  @Input() fEDomain: FreeEmailDomain;\n  errLabel: any;\n  clientErrorMsg: any;\n  public freeEmailDisplayDomain: string = \"none\";\n\n  constructor(\n    private fEdomainService: FreeEmailDomainServices,\n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit(): void {\n    this.showDialogToAdd();\n  }\n  showDialogToAdd() {\n    this.freeEmailDisplayDomain = \"block\";\n    this.hiddenScroll();\n  }\n\n  hiddenScroll() {\n    try {\n      let bodyElement = document.getElementById(\"modalbody\") as HTMLElement;\n      if (bodyElement) {\n        bodyElement.classList.add(\"modal-open\");\n      }\n    } catch (ex) {\n      this.clientErrorMsg(ex, \"hiddenScroll\");\n    }\n  }\n\n  displayScroll() {\n    try {\n      let bodyElement = document.getElementById(\"modalbody\") as HTMLElement;\n      if (bodyElement) {\n        bodyElement.classList.remove(\"modal-open\");\n      }\n    } catch (ex) {\n      this.clientErrorMsg(ex, \"displayScroll\");\n    }\n  }\n\n  save() {\n    this.fEdomainService.isFEDomainExists(this.fEDomain.domainName).subscribe(\n      (res) => {\n        if (res.statusCode == 200) {\n          if (this.fEDomainType == \"Add\") {\n            this.addFEDomain(this.fEDomain);\n          } else if (this.fEDomainType == \"Edit\") {\n            this.updateFEDomain(this.fEDomain);\n          }\n        } else {\n          this.errLabel = res.message;\n          this.fEDomain = {\n            domainName: \"\",\n            freeEmailProviderDomainsDetailsId: null,\n            status: null,\n          };\n        }\n      },\n      (error) => {\n        this.errLabel = error;\n      }\n    );\n  }\n  addFEDomain(fEDomain: FreeEmailDomain) {\n    this.fEdomainService.addFEDomain(fEDomain).subscribe((res) => {\n      if (res.statusCode == 200) {\n        this.freeEmailDisplayDomain = \"none\";\n        this.sharedService.add({\n          severity: \"success\",\n          summary: \"Success\",\n          detail: res.message,\n        });\n      }\n      this.displayScroll();\n      this.onClose.emit({ type: \"add\" });\n    });\n  }\n  updateFEDomain(fEDomain: FreeEmailDomain) {\n    this.fEdomainService.updateFEDomain(fEDomain).subscribe((res) => {\n      if ((res.statusCode = 200)) {\n        this.freeEmailDisplayDomain = \"none\";\n        this.sharedService.add({\n          severity: \"success\",\n          summary: \"Success\",\n          detail: res.message,\n        });\n      }\n      this.displayScroll();\n      this.onClose.emit({ type: \"add\" });\n    });\n  }\n  modalClose() {\n    this.freeEmailDisplayDomain = \"none\";\n    this.displayScroll();\n    this.onClose.emit({ type: \"Add\" });\n  }\n}\n","<div\n  [ngStyle]=\"{ display: freeEmailDisplayDomain }\"\n  data-backdrop=\"static\"\n  class=\"modal custom-modal backdrop\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n>\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">{{ fEDomainType }} Free Email Domain</h5>\n        <button type=\"button\" class=\"close\" (click)=\"modalClose()\">\n          <span aria-hidden=\"true\">×</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div>\n          <div class=\"row\" *ngIf=\"errLabel\">\n            <div class=\"col-sm-6\" style=\"color: red;\">\n              {{ errLabel }}\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col\">\n              <div class=\"form-group\">\n                <label class=\"col-form-label\"\n                  >Name <span class=\"text-danger\">*</span></label\n                >\n                <input\n                  pInputText\n                  class=\"form-control\"\n                  [(ngModel)]=\"fEDomain.domainName\"\n                  value=\"\"\n                  type=\"text\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div class=\"submit-section\">\n            <button\n              type=\"button\"\n              [disabled]=\"!fEDomain?.domainName\"\n              class=\"btn btn-primary submit-btn\"\n              data-dismiss=\"modal\"\n              (click)=\"save()\"\n            >\n              <ng-container *ngIf=\"fEDomainType == 'Edit'\">\n                Update\n              </ng-container>\n              <ng-container *ngIf=\"fEDomainType == 'Add'\">\n                Save\n              </ng-container>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ConfirmationService } from \"src/app/components/api/confirmationservice\";\nimport { FreeEmailDomainServices } from \"./freeemaildomain.service\";\nimport { FreeEmailDomain } from \"@app/shared/models/freeemaildomain.model\";\nimport { SharedService } from \"@app/shared/shared.service\";\n\n@Component({\n  selector: \"app-freeemaildomain\",\n  templateUrl: \"./freeemaildomain.component.html\",\n  styleUrls: [\"./freeemaildomain.component.css\"],\n})\nexport class FreeemaildomainComponent implements OnInit {\n  cols: any[];\n  displayDialog: boolean;\n  clientErrorMsg: any;\n  public fEDDisplay: string = \"none\";\n  fEDomainType: string;\n  fEDomain: FreeEmailDomain;\n  lstDomain: FreeEmailDomain[];\n  loading: boolean = false;\n  status: number = 1;\n  constructor(\n    private confirmationService: ConfirmationService,\n    private sharedService: SharedService,\n    private FreeEmailDomainServices: FreeEmailDomainServices\n  ) {}\n\n  ngOnInit(): void {\n    this.cols = [\n      // { field: 'departmentDetailsId', header: 'ID' },\n      // { field: \"freeEmailProviderDomainsDetailsId\", header: \"ID\" },\n      { field: \"domainName\", header: \"Domain Name\" },\n      { field: \"status\", header: \"Status\" },\n    ];\n    this.getDomain(this.status);\n  }\n  handleChange(event) {\n    if (event.index == 0) {\n      this.status = 1;\n      this.getDomain(1);\n    } else if (event.index == 1) {\n      this.status = 0;\n      this.getDomain(0);\n    }\n  }\n  getDomain(status: number) {\n    this.loading = true;\n    this.lstDomain = [];\n    this.FreeEmailDomainServices.getAllFreeEmailDomain(status).subscribe(\n      (res) => {\n        this.loading = false;\n        this.lstDomain = [];\n        if (res.message == \"freeEmailProviderDomains\")\n          this.lstDomain = res.responsePayload as FreeEmailDomain[];\n      },\n      (error) => {\n        this.loading = false;\n      }\n    );\n  }\n  showDialogToAdd() {\n    this.fEDomainType = \"Add\";\n    this.displayDialog = true;\n    this.hiddenScroll();\n    this.fEDomain = {\n      domainName: null,\n      freeEmailProviderDomainsDetailsId: null,\n      status: null,\n    };\n  }\n  onFEDomainCloseClick(event) {\n    if (event.type == \"add\") {\n      this.getDomain(this.status);\n    }\n    this.fEDomainType = \"\";\n    this.displayDialog = undefined;\n  }\n  hiddenScroll() {\n    try {\n      let bodyElement = document.getElementById(\"modalbody\") as HTMLElement;\n      if (bodyElement) {\n        bodyElement.classList.add(\"modal-open\");\n      }\n    } catch (ex) {\n      this.clientErrorMsg(ex, \"hiddenScroll\");\n    }\n  }\n\n  displayScroll() {\n    try {\n      let bodyElement = document.getElementById(\"modalbody\") as HTMLElement;\n      if (bodyElement) {\n        bodyElement.classList.remove(\"modal-open\");\n      }\n    } catch (ex) {\n      this.clientErrorMsg(ex, \"displayScroll\");\n    }\n  }\n\n  save() {\n    this.displayScroll();\n  }\n  confirm(rowData) {\n    this.confirmationService.confirm({\n      message: \"Are you sure that you want to Inactivate this data?\",\n      accept: () => {\n        this.delete(rowData);\n        //Actual logic to perform a confirmation\n      },\n    });\n  }\n  delete(rowData: FreeEmailDomain) {\n    if (this.status == 1) {\n      this.FreeEmailDomainServices.deactivateFEDomain(\n        rowData.freeEmailProviderDomainsDetailsId\n      ).subscribe((res) => {\n        if (res.statusCode == 200) {\n          this.sharedService.add({\n            severity: \"success\",\n            summary: \"Success\",\n            detail: res.message,\n          });\n          this.getDomain(this.status);\n        }\n      });\n    } else {\n      this.FreeEmailDomainServices.activateFEDomain(\n        rowData.freeEmailProviderDomainsDetailsId\n      ).subscribe((res) => {\n        if (res.statusCode == 200) {\n          this.sharedService.add({\n            severity: \"success\",\n            summary: \"Success\",\n            detail: res.message,\n          });\n          this.getDomain(this.status);\n        }\n      });\n    }\n  }\n  onDelete(rowData) {\n    this.fEDomain = rowData;\n  }\n  onRowSelect(data: FreeEmailDomain) {\n    this.fEDomain = data;\n    this.fEDomainType = \"Edit\";\n    this.displayDialog = true;\n    this.hiddenScroll();\n  }\n  modalClose() {\n    this.fEDDisplay = \"none\";\n    this.displayScroll();\n  }\n\n  closeAddmodal() {\n    this.fEDDisplay = \"none\";\n    this.displayScroll();\n  }\n}\n","<div class=\"page-wrapper\">\n  <!-- Page Content -->\n  <div class=\"content container-fluid\">\n    <!-- Page Header -->\n    <div class=\"page-header\">\n      <div class=\"row align-items-center\">\n        <div class=\"col\">\n          <ul class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\"><a>Dashboard</a></li>\n            <li class=\"breadcrumb-item active\">Free Email Domain</li>\n          </ul>\n        </div>\n        <div class=\"col-auto float-right ml-auto\">\n          <a\n            href=\"javascript:void(0)\"\n            class=\"btn add-btn\"\n            (click)=\"showDialogToAdd()\"\n            ><i class=\"fa fa-plus\"></i> Add Free Email Domain</a\n          >\n        </div>\n      </div>\n    </div>\n    <!-- /Page Header -->\n    <!-- /Search Filter -->\n    <p-tabView (onChange)=\"handleChange($event)\">\n      <p-tabPanel header=\"Active Free Email Domain\">\n        <div class=\"col pl-0 pr-0 mt-2\" *ngIf=\"!loading\">\n          <p-table\n            [columns]=\"cols\"\n            [value]=\"lstDomain\"\n            [rowsPerPageOptions]=\"[10, 25, 50]\"\n            styleClass=\"ui-table-customers\"\n            #dt\n            [paginator]=\"true\"\n            [rows]=\"10\"\n            [showCurrentPageReport]=\"true\"\n            [alwaysShowPaginator]=\"false\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n            [filterDelay]=\"0\"\n            [globalFilterFields]=\"['domainName', 'status']\"\n          >\n            <ng-template pTemplate=\"caption\">\n              .\n              <div class=\"ui-table-globalfilter-container\">\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\n                  placeholder=\"Search\"\n                />\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\" let-columns>\n              <tr>\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n                  {{ col.header }}\n                  <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n                <th class=\"actions\">Actions</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n              <tr [pSelectableRow]=\"rowData\">\n                <td *ngFor=\"let col of columns\">\n                  <ng-container *ngIf=\"col.field == 'status'\">\n                    {{ rowData[col.field] | status }}\n                  </ng-container>\n                  <ng-container *ngIf=\"col.field != 'status'\">\n                    {{ rowData[col.field] }}\n                  </ng-container>\n                </td>\n                <!-- <td class=\"actions\">\n                                  <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                      <button title=\"Edit\" (click)=\"onRowSelect(rowData)\" type=\"button\" class=\"mr-2 btn btn-secondary\"><i  class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></button>\n                                      <button title=\"Delete\" (click)=\"delete(rowData)\" type=\"button\" class=\"btn btn-danger\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>\n                                    </div>\n                                  \n                                 \n                              </td> -->\n                <td class=\"actions\">\n                  <div class=\"dropdown dropdown-action\">\n                    <a\n                      href=\"#\"\n                      class=\"action-icon dropdown-toggle\"\n                      data-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                      ><i class=\"material-icons\">more_vert</i></a\n                    >\n                    <div\n                      class=\"dropdown-menu dropdown-menu-right\"\n                      x-placement=\"top-end\"\n                      style=\"\n                        position: absolute;\n                        will-change: transform;\n                        top: 0px;\n                        left: 0px;\n                        transform: translate3d(72px, -2px, 0px);\n                      \"\n                    >\n                      <a\n                        class=\"dropdown-item\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        (click)=\"onRowSelect(rowData)\"\n                        ><i class=\"fa fa-pencil m-r-5\"></i> Edit</a\n                      >\n                      <a\n                        class=\"dropdown-item delete\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        (click)=\"onDelete(rowData)\"\n                        data-target=\"#delete_Domain\"\n                        ><i class=\"fa fa-trash-o m-r-5\"></i> Inactive</a\n                      >\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td [attr.colspan]=\"cols.length\" style=\"text-align: center\">\n                  No Records Found.\n                </td>\n              </tr>\n            </ng-template>\n          </p-table>\n        </div>\n      </p-tabPanel>\n      <p-tabPanel header=\"Inactive Free Email Doamin\">\n        <div class=\"col pl-0 pr-0 mt-2\" *ngIf=\"!loading\">\n          <p-table\n            [columns]=\"cols\"\n            [value]=\"lstDomain\"\n            [rowsPerPageOptions]=\"[10, 25, 50]\"\n            styleClass=\"ui-table-customers\"\n            #dt\n            [paginator]=\"true\"\n            [rows]=\"10\"\n            [showCurrentPageReport]=\"true\"\n            [alwaysShowPaginator]=\"false\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n            [filterDelay]=\"0\"\n            [globalFilterFields]=\"['domainName', 'status']\"\n          >\n            <ng-template pTemplate=\"caption\">\n              .\n              <div class=\"ui-table-globalfilter-container\">\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\n                  placeholder=\"Search\"\n                />\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\" let-columns>\n              <tr>\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n                  {{ col.header }}\n                  <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n                <th class=\"actions\">Actions</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n              <tr [pSelectableRow]=\"rowData\">\n                <td *ngFor=\"let col of columns\">\n                  <ng-container *ngIf=\"col.field == 'status'\">\n                    {{ rowData[col.field] | status }}\n                  </ng-container>\n                  <ng-container *ngIf=\"col.field != 'status'\">\n                    {{ rowData[col.field] }}\n                  </ng-container>\n                </td>\n                <!-- <td class=\"actions\">\n                                          <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                              <button title=\"Edit\" (click)=\"onRowSelect(rowData)\" type=\"button\" class=\"mr-2 btn btn-secondary\"><i  class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></button>\n                                              <button title=\"Delete\" (click)=\"delete(rowData)\" type=\"button\" class=\"btn btn-danger\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>\n                                            </div>\n                                          \n                                         \n                                      </td> -->\n                <td class=\"actions\">\n                  <div class=\"dropdown dropdown-action\">\n                    <a\n                      href=\"#\"\n                      class=\"action-icon dropdown-toggle\"\n                      data-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                      ><i class=\"material-icons\">more_vert</i></a\n                    >\n                    <div\n                      class=\"dropdown-menu dropdown-menu-right\"\n                      x-placement=\"top-end\"\n                      style=\"\n                        position: absolute;\n                        will-change: transform;\n                        top: 0px;\n                        left: 0px;\n                        transform: translate3d(72px, -2px, 0px);\n                      \"\n                    >\n                      <a\n                        class=\"dropdown-item\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        (click)=\"onRowSelect(rowData)\"\n                        ><i class=\"fa fa-pencil m-r-5\"></i> Edit</a\n                      >\n                      <a\n                        class=\"dropdown-item\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        (click)=\"delete(rowData)\"\n                        ><i class=\"fas fa-toggle-on\"></i>Active</a\n                      >\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td [attr.colspan]=\"cols.length\" style=\"text-align: center\">\n                  No Records Found.\n                </td>\n              </tr>\n            </ng-template>\n          </p-table>\n        </div>\n      </p-tabPanel>\n    </p-tabView>\n  </div>\n  <!-- /Page Content -->\n\n  <div\n    class=\"modal custom-modal fade\"\n    id=\"delete_Domain\"\n    role=\"dialog\"\n    aria-modal=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n        <div class=\"modal-body\">\n          <div class=\"form-header\">\n            <h3>Inactive Free Email Domain</h3>\n            <p>Are you sure want to Inactive the free Email Domain?</p>\n          </div>\n          <div class=\"modal-btn delete-action\">\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <a\n                  href=\"javascript:void(0);\"\n                  data-dismiss=\"modal\"\n                  (click)=\"delete(fEDomain)\"\n                  class=\"btn btn-primary continue-btn\"\n                  >Inactivate</a\n                >\n              </div>\n              <div class=\"col-6\">\n                <a\n                  href=\"javascript:void(0);\"\n                  data-dismiss=\"modal\"\n                  class=\"btn btn-primary cancel-btn\"\n                  >Cancel</a\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"displayDialog\">\n    <app-edit-freeemaildomain\n      [fEDomainType]=\"fEDomainType\"\n      [fEDomain]=\"fEDomain\"\n      (onClose)=\"onFEDomainCloseClick($event)\"\n    ></app-edit-freeemaildomain>\n  </ng-container>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ApiResponse } from \"@app/shared/models/api-response.model\";\nimport { FreeEmailDomain } from \"@app/shared/models/freeemaildomain.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FreeEmailDomainServices {\n  constructor(private http: HttpClient) {}\n  getAllFreeEmailDomain(status: number) {\n    return this.http.get<ApiResponse<FreeEmailDomain>>(\n      `api/freeemailproviderdomains/all?status=${status}`\n    );\n  }\n  addFEDomain(fEDomain: any) {\n    return this.http.post<ApiResponse<FreeEmailDomain>>(\n      `api/freeemailproviderdomains/add?freeEmailProviderDomain=${fEDomain.domainName}`,\n      {}\n    );\n  }\n  updateFEDomain(fEDomain: FreeEmailDomain) {\n    return this.http.post<ApiResponse<FreeEmailDomain>>(\n      \"api/freeemailproviderdomains/update\",\n      fEDomain\n    );\n  }\n  activateFEDomain(freeEmailProviderDomainsDetailsId: number) {\n    return this.http.put<ApiResponse<FreeEmailDomain>>(\n      `api/freeemailproviderdomains/activate/${freeEmailProviderDomainsDetailsId}`,\n      {}\n    );\n  }\n  deactivateFEDomain(freeEmailProviderDomainsDetailsId: number) {\n    return this.http.put<ApiResponse<FreeEmailDomain>>(\n      `api/freeemailproviderdomains/deactivate/${freeEmailProviderDomainsDetailsId}`,\n      {}\n    );\n  }\n  isFEDomainExists(freeEmailDomain: string) {\n    return this.http.get<ApiResponse<FreeEmailDomain>>(\n      `api/freeemailproviderdomains/exists?workEmail=${freeEmailDomain}`\n    );\n  }\n}\n","import { Component, OnInit, Input, ViewChild, ElementRef } from \"@angular/core\";\n\nimport { ConfirmationService } from \"src/app/components/api/confirmationservice\";\nimport { OrganizationService } from \"./organization.service\";\nimport { Department } from \"@app/shared/models/department.model\";\nimport { Organization } from \"@app/shared/models/organization.model\";\nimport { SendMessage } from \"@app/shared/models/sendmessage.model\";\nimport { SharedService } from \"@app/shared/shared.service\";\n@Component({\n  selector: \"app-organization\",\n  templateUrl: \"./organization.component.html\",\n  styleUrls: [\"./organization.component.css\"],\n})\nexport class OrganizationComponent implements OnInit {\n  cols: any[];\n  displayDialog: boolean;\n  clientErrorMsg: any;\n  public editemployeeDisplay: string = \"none\";\n  public addemployeeDisplay: string = \"none\";\n  departmentType: string;\n  organization: Organization;\n  lstOrganizations: Organization[];\n  loading: boolean = false;\n  status: number;\n  @Input() sendMessage: SendMessage = {};\n  @ViewChild(\"closeBtn\") closeBtn: ElementRef;\n\n  constructor(\n    private confirmationService: ConfirmationService,\n    private sharedService: SharedService,\n    private organizationService: OrganizationService\n  ) {}\n\n  ngOnInit(): void {\n    this.cols = [\n      // { field: 'departmentDetailsId', header: 'ID' },\n      { field: \"organizationName\", header: \"Name\" },\n      { field: \"phoneNumber\", header: \"Phone Number\" },\n      { field: \"noOfEmployees\", header: \"No of Employees\" },\n    ];\n    this.getOrganizations();\n    this.status = 1;\n  }\n  handleChange(event) {\n    if (event.index == 0) {\n      this.status = 1;\n      this.getOrganizations(1);\n    } else if (event.index == 1) {\n      this.status = 0;\n      this.getOrganizations(0);\n    }\n  }\n  getOrganizations(status: number = 1) {\n    this.loading = true;\n    this.lstOrganizations = [];\n    this.organizationService.getAllOrganizations(status).subscribe(\n      (res) => {\n        this.loading = false;\n        this.lstOrganizations = [];\n        if (res.message == \"Organizations\")\n          this.lstOrganizations = res.responsePayload as Organization[];\n      },\n      (error) => {\n        this.loading = false;\n      }\n    );\n  }\n  showDialogToAdd() {\n    this.departmentType = \"Add\";\n    //this.hiddenScroll();\n  }\n\n  hiddenScroll() {\n    try {\n      let bodyElement = document.getElementById(\"modalbody\") as HTMLElement;\n      if (bodyElement) {\n        bodyElement.classList.add(\"modal-open\");\n      }\n    } catch (ex) {\n      this.clientErrorMsg(ex, \"hiddenScroll\");\n    }\n  }\n\n  displayScroll() {\n    try {\n      let bodyElement = document.getElementById(\"modalbody\") as HTMLElement;\n      if (bodyElement) {\n        bodyElement.classList.remove(\"modal-open\");\n      }\n    } catch (ex) {\n      this.clientErrorMsg(ex, \"displayScroll\");\n    }\n  }\n\n  save() {\n    this.displayScroll();\n  }\n  confirm(rowData) {\n    this.confirmationService.confirm({\n      message: \"Are you sure that you want to Inactivate this data?\",\n      accept: () => {\n        this.delete(rowData);\n        //Actual logic to perform a confirmation\n      },\n    });\n  }\n  delete(rowData: Organization) {\n    if (this.status == 1) {\n      this.organizationService\n        .deactivateOrganization(rowData.organizationDetailsId)\n        .subscribe((res) => {\n          if (res.message == \"Organization deactivate successful\") {\n            this.displayDialog = false;\n            this.getOrganizations(this.status);\n          }\n        });\n    } else {\n      this.organizationService\n        .activateOrganization(rowData.organizationDetailsId)\n        .subscribe((res) => {\n          if (res.message == \"Organization activate successful\") {\n            this.displayDialog = false;\n            this.getOrganizations(this.status);\n          }\n        });\n    }\n  }\n\n  sendMessageToOrganization(rowData: Organization) {\n    if (!this.sendMessage.subject || this.sendMessage.subject.trim() == \"\") {\n      return;\n    }\n    this.sendMessage.organizationDetailsId = rowData.organizationDetailsId;\n    this.organizationService.sendMessage(this.sendMessage).subscribe((res) => {\n      if (res.message == \"Send Communication successful\") {\n        this.sharedService.add({\n          severity: \"success\",\n          summary: \"Success\",\n          detail: res.message,\n        });\n      } else {\n        this.sharedService.add({\n          severity: \"error\",\n          summary: \"Error\",\n          detail: res.message,\n        });\n      }\n    });\n    this.closeBtn.nativeElement.click();\n  }\n\n  onDelete(rowData) {\n    this.organization = rowData;\n  }\n\n  onSendMessage(rowData) {\n    this.organization = rowData;\n  }\n\n  onRowSelect(data: Organization) {\n    this.organization = data;\n    this.departmentType = \"Edit\";\n    this.hiddenScroll();\n  }\n  modalClose() {\n    this.editemployeeDisplay = \"none\";\n    this.displayScroll();\n  }\n}\n","<div class=\"page-wrapper\">\n  <!-- Page Content -->\n  <div class=\"content container-fluid\">\n    <!-- Page Header -->\n    <div class=\"page-header\">\n      <div class=\"row align-items-center\">\n        <div class=\"col\">\n          <ul class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\"><a>Dashboard</a></li>\n            <li class=\"breadcrumb-item active\">Organizations</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <!-- /Page Header -->\n    <!-- /Search Filter -->\n    <p-tabView (onChange)=\"handleChange($event)\">\n      <p-tabPanel header=\"Active Organizations\">\n        <div class=\"col pl-0 pr-0 mt-2\" *ngIf=\"!loading\">\n          <p-table\n            [columns]=\"cols\"\n            [value]=\"lstOrganizations\"\n            [rowsPerPageOptions]=\"[10, 25, 50]\"\n            styleClass=\"ui-table-customers\"\n            #dt\n            [paginator]=\"true\"\n            [rows]=\"10\"\n            [showCurrentPageReport]=\"true\"\n            [alwaysShowPaginator]=\"false\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n            [filterDelay]=\"0\"\n            [globalFilterFields]=\"[\n              'organizationName',\n              'phoneNumber',\n              'noOfEmployees'\n            ]\"\n          >\n            <ng-template pTemplate=\"caption\">\n              .\n              <div class=\"ui-table-globalfilter-container\">\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\n                  placeholder=\"Search\"\n                />\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\" let-columns>\n              <tr>\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n                  {{ col.header }}\n                  <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n                <th class=\"actions\">Actions</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n              <tr [pSelectableRow]=\"rowData\">\n                <td *ngFor=\"let col of columns\">\n                  <ng-container *ngIf=\"col.field == 'status'\">\n                    {{ rowData[col.field] }}\n                  </ng-container>\n                  <ng-container *ngIf=\"col.field != 'status'\">\n                    {{ rowData[col.field] }}\n                  </ng-container>\n                </td>\n                <td class=\"actions\">\n                  <div class=\"dropdown dropdown-action\">\n                    <a\n                      href=\"#\"\n                      class=\"action-icon dropdown-toggle\"\n                      data-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                      ><i class=\"material-icons\">more_vert</i></a\n                    >\n                    <div\n                      class=\"dropdown-menu dropdown-menu-right\"\n                      x-placement=\"top-end\"\n                      style=\"\n                        position: absolute;\n                        will-change: transform;\n                        top: 0px;\n                        left: 0px;\n                        transform: translate3d(72px, -2px, 0px);\n                      \"\n                    >\n                      <a\n                        class=\"dropdown-item delete\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        (click)=\"onDelete(rowData)\"\n                        data-target=\"#delete_employee\"\n                        ><i class=\"fa fa-trash-o m-r-5\"></i> Inactive</a\n                      >\n                      <a\n                        class=\"dropdown-item\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        data-target=\"#send_Message\"\n                        (click)=\"onSendMessage(rowData)\"\n                        ><i class=\"fa fa-paper-plane m-r-5\"></i> Send Message</a\n                      >\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td [attr.colspan]=\"cols.length\" style=\"text-align: center\">\n                  No Records Found.\n                </td>\n              </tr>\n            </ng-template>\n          </p-table>\n        </div>\n      </p-tabPanel>\n      <p-tabPanel header=\"Inactive Organizations\">\n        <div class=\"col pl-0 pr-0 mt-2\" *ngIf=\"!loading\">\n          <p-table\n            [columns]=\"cols\"\n            [value]=\"lstOrganizations\"\n            [rowsPerPageOptions]=\"[10, 25, 50]\"\n            styleClass=\"ui-table-customers\"\n            #dt\n            [paginator]=\"true\"\n            [rows]=\"10\"\n            [showCurrentPageReport]=\"true\"\n            [alwaysShowPaginator]=\"false\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n            [filterDelay]=\"0\"\n            [globalFilterFields]=\"[\n              'organizationName',\n              'phoneNumber',\n              'noOfEmployees'\n            ]\"\n          >\n            <ng-template pTemplate=\"caption\">\n              .\n              <div class=\"ui-table-globalfilter-container\">\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\n                  placeholder=\"Search\"\n                />\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\" let-columns>\n              <tr>\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n                  {{ col.header }}\n                  <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n                <th class=\"actions\">Actions</th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n              <tr [pSelectableRow]=\"rowData\">\n                <td *ngFor=\"let col of columns\">\n                  {{ rowData[col.field] }}\n                  <!-- <ng-container *ngIf=\"col.field=='status'\">\n                                    </ng-container>\n                                    <ng-container *ngIf=\"col.field!='status'\">\n                                        {{rowData[col.field]}}\n                                    </ng-container> -->\n                </td>\n                <td class=\"actions\">\n                  <div class=\"dropdown dropdown-action\">\n                    <a\n                      href=\"#\"\n                      class=\"action-icon dropdown-toggle\"\n                      data-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                      ><i class=\"material-icons\">more_vert</i></a\n                    >\n                    <div\n                      class=\"dropdown-menu dropdown-menu-right\"\n                      x-placement=\"top-end\"\n                      style=\"\n                        position: absolute;\n                        will-change: transform;\n                        top: 0px;\n                        left: 0px;\n                        transform: translate3d(72px, -2px, 0px);\n                      \"\n                    >\n                      <!-- <a class=\"dropdown-item\" href=\"#\" data-toggle=\"modal\"\n                                                (click)=\"onRowSelect(rowData)\"><i class=\"fa fa-pencil m-r-5\"></i>\n                                                Edit</a> -->\n                      <a\n                        class=\"dropdown-item\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        (click)=\"delete(rowData)\"\n                        ><i class=\"fa fa-trash-o m-r-5\"></i> Active</a\n                      >\n                      <a\n                        class=\"dropdown-item\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        data-target=\"#send_Message\"\n                        (click)=\"onSendMessage(rowData)\"\n                        ><i class=\"fa fa-trash-o m-r-5\"></i> Send Message</a\n                      >\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td [attr.colspan]=\"cols.length\" style=\"text-align: center\">\n                  No Records Found.\n                </td>\n              </tr>\n            </ng-template>\n          </p-table>\n        </div>\n      </p-tabPanel>\n    </p-tabView>\n  </div>\n  <div\n    class=\"modal custom-modal fade\"\n    id=\"delete_employee\"\n    role=\"dialog\"\n    aria-modal=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n        <div class=\"modal-body\">\n          <div class=\"form-header\">\n            <h3>Inactive Organization</h3>\n            <p>Are you sure want to Inactive the Organization?</p>\n          </div>\n          <div class=\"modal-btn delete-action\">\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <a\n                  href=\"javascript:void(0);\"\n                  data-dismiss=\"modal\"\n                  (click)=\"delete(organization)\"\n                  class=\"btn btn-primary continue-btn\"\n                  >Inactivate</a\n                >\n              </div>\n              <div class=\"col-6\">\n                <a\n                  href=\"javascript:void(0);\"\n                  data-dismiss=\"modal\"\n                  class=\"btn btn-primary cancel-btn\"\n                  >Cancel</a\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div\n    class=\"modal custom-modal fade\"\n    id=\"send_Message\"\n    role=\"dialog\"\n    aria-modal=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n        <div class=\"modal-body\">\n          <div class=\"form-header\">\n            <h3>Send Message</h3>\n          </div>\n          <div class=\"modal-btn delete-action\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\">\n                <div class=\"form-group\">\n                  <label class=\"col-form-label\"\n                    >Subject<span class=\"text-danger\">*</span></label\n                  >\n                  <input\n                    pInputText\n                    class=\"form-control\"\n                    [(ngModel)]=\"sendMessage.subject\"\n                    placeholder=\" \"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"col-sm-12\">\n                <div class=\"form-group\">\n                  <label class=\"col-form-label\"\n                    >Body<span class=\"text-danger\">*</span></label\n                  >\n                  <textarea\n                    rows=\"5\"\n                    cols=\"1\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"sendMessage.messageBody\"\n                    pInputTextarea\n                  ></textarea>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <a\n                  href=\"javascript:void(0);\"\n                  (click)=\"sendMessageToOrganization(organization)\"\n                  class=\"btn btn-primary continue-btn\"\n                  >Send</a\n                >\n              </div>\n              <div class=\"col-6\">\n                <a\n                  href=\"javascript:void(0);\"\n                  data-dismiss=\"modal\"\n                  class=\"btn btn-primary cancel-btn\"\n                  #closeBtn\n                  >Cancel</a\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiResponse } from '@app/shared/models/api-response.model';\nimport { Department } from '@app/shared/models/department.model';\nimport { Organization } from '@app/shared/models/organization.model';\nimport { SendMessage } from '@app/shared/models/sendmessage.model';\n\n@Injectable({\n    providedIn:'root'\n})\nexport class OrganizationService\n{\n    constructor(private http:HttpClient){\n\n    }\n    getAllOrganizations(status:number){\n        return this.http.get<ApiResponse<Organization>>(`api/sadmin/organizations/get?status=${status}`);\n    }    \n    activateOrganization(organizationDetailsId:number){\n        return this.http.put<ApiResponse<Organization>>(`api/sadmin/organization/activate/${organizationDetailsId}`,{})\n    }\n    deactivateOrganization(organizationDetailsId:number){\n        return this.http.put<ApiResponse<Organization>>(`api/sadmin/organization/deactivate/${organizationDetailsId}?reason='reason'`,{})\n    }\n    sendMessage(sendMessage:SendMessage){\n        return this.http.post<ApiResponse<any>>(`api/sadmin/organization/communication/send`,sendMessage)\n    }\n}","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { OrganizationComponent } from \"./organization/organization.component\";\nimport { FreeemaildomainComponent } from \"./freeemaildomain/freeemaildomain.component\";\nimport { AdminDashboardComponent } from \"@app/admin/admin-dashboard/admin-dashboard.component\";\nimport { ComingsoonPageComponent } from \"@app/comingsoon-page/comingsoon-page.component\";\nimport { ApproversComponent } from \"@app/core/custommodules/approvers/approvers.component\";\nimport { CompanyComponent } from \"@app/core/custommodules/company/company.component\";\nimport { CompanyviewComponent } from \"@app/core/custommodules/company/companyview/companyview.component\";\nimport { EditCompanyComponent } from \"@app/core/custommodules/company/edit-company/edit-company.component\";\nimport { CategoryComponent } from \"@app/core/custommodules/departments-category/category.component\";\nimport { DepartmentsComponent } from \"@app/core/custommodules/departments/departments.component\";\nimport { DesignationsComponent } from \"@app/core/custommodules/designations/designations.component\";\nimport { DocumentsComponent } from \"@app/core/custommodules/documents/documents.component\";\nimport { EmployeeinfoComponent } from \"@app/core/custommodules/employeeinfo/employeeinfo.component\";\nimport { I9Component } from \"@app/core/custommodules/i9/i9.component\";\nimport { ImmigrationsComponent } from \"@app/core/custommodules/immigrations/immigrations.component\";\nimport { EditInvoiceComponent } from \"@app/core/custommodules/invoices/edit-invoice/edit-invoice.component\";\nimport { InvoicesComponent } from \"@app/core/custommodules/invoices/invoices.component\";\nimport { ViewInvoiceComponent } from \"@app/core/custommodules/invoices/view-invoice/view-invoice.component\";\nimport { MyDocumentsComponent } from \"@app/core/custommodules/my-documents/my-documents.component\";\nimport { NotesComponent } from \"@app/core/custommodules/notes/notes.component\";\nimport { AdvanceComponent } from \"@app/core/custommodules/payhistory/advance/advance.component\";\nimport { ViewAdvanceComponent } from \"@app/core/custommodules/payhistory/advance/view-advance/view-advance.component\";\nimport { DeductionViewComponent } from \"@app/core/custommodules/payhistory/deductions/deduction-view/deduction-view.component\";\nimport { DeductionsComponent } from \"@app/core/custommodules/payhistory/deductions/deductions.component\";\nimport { ExpenceViewComponent } from \"@app/core/custommodules/payhistory/expences/expence-view/expence-view.component\";\nimport { ExpencesComponent } from \"@app/core/custommodules/payhistory/expences/expences.component\";\nimport { PayrateViewComponent } from \"@app/core/custommodules/payhistory/payrate/payrate-view/payrate-view.component\";\nimport { PayrateComponent } from \"@app/core/custommodules/payhistory/payrate/payrate.component\";\nimport { PaymentsComponent } from \"@app/core/custommodules/payments/payments.component\";\nimport { ViewpaymentsComponent } from \"@app/core/custommodules/payments/viewpayments/viewpayments.component\";\nimport { PaystubsComponent } from \"@app/core/custommodules/paystubs/paystubs.component\";\nimport { EditProjectComponent } from \"@app/core/custommodules/project/edit-project/edit-project.component\";\nimport { ProjectComponent } from \"@app/core/custommodules/project/project.component\";\nimport { ViewProjectComponent } from \"@app/core/custommodules/project/view-project/view-project.component\";\nimport { TimesheetsComponent } from \"@app/core/custommodules/timesheets/timesheets.component\";\nimport { ViewTimesheetComponent } from \"@app/core/custommodules/timesheets/view-timesheet/view-timesheet.component\";\nimport { W4Component } from \"@app/core/custommodules/w4/w4.component\";\nimport { UnsavedChangesGuard } from \"@app/core/guards/unsaved-changes.guard\";\nimport { MyOrganizationDetailsComponent } from \"@app/core/my-organization-details/my-organization-details.component\";\nimport { MyprofileComponent } from \"@app/core/myprofile/myprofile.component\";\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"dashboard\", pathMatch: \"full\" },\n  { path: \"dashboard\", component: AdminDashboardComponent },\n  { path: \"organizationDetails\", component: MyOrganizationDetailsComponent },\n  { path: \"employees\", component: EmployeeinfoComponent },\n  { path: \"departments\", component: DepartmentsComponent },\n  { path: \"designations\", component: DesignationsComponent },\n  {\n    path: \"myprofile\",\n    component: MyprofileComponent,\n  },\n  {\n    path: \"company\",\n    component: CompanyComponent,\n  },\n  {\n    path: \"company/view\",\n    component: CompanyviewComponent,\n  },\n  {\n    path: \"company/edit\",\n    component: EditCompanyComponent,\n  },\n  {\n    path: \"projects\",\n    component: ProjectComponent,\n  },\n  {\n    path: \"projects/project/view\",\n    component: ViewProjectComponent,\n  },\n  {\n    path: \"projects/project/edit\",\n    component: EditProjectComponent,\n  },\n  {\n    path: \"documents\",\n    component: DocumentsComponent,\n  },\n  { path: \"approvers\", component: ApproversComponent },\n  {\n    path: \"category\",\n    component: CategoryComponent,\n  },\n  { path: \"w4\", component: W4Component },\n  { path: \"i9\", component: I9Component },\n  { path: \"paystubs\", component: PaystubsComponent },\n  { path: \"timesheets\", component: TimesheetsComponent },\n  { path: \"timesheets/timesheet/view\", component: ViewTimesheetComponent },\n  { path: \"notes\", component: NotesComponent },\n  { path: \"invoices\", component: InvoicesComponent },\n  { path: \"invoices/invoice\", component: EditInvoiceComponent ,canDeactivate:[UnsavedChangesGuard]},\n  { path: \"invoices/invoice/view\", component: ViewInvoiceComponent },\n  { path: \"payments\", component: PaymentsComponent },\n  { path: \"payments/payment/view\", component: ViewpaymentsComponent },\n  { path: \"my_documents\", component: MyDocumentsComponent },\n  { path: \"deductions\", component: DeductionsComponent },\n  { path: \"deductions/deduction/view\", component: DeductionViewComponent },\n  { path: \"payrate\", component: PayrateComponent },\n  { path: \"payrate/view\", component: PayrateViewComponent },\n  { path: \"advances\", component: AdvanceComponent },\n  { path: \"advances/advance/view\", component: ViewAdvanceComponent },\n  { path: \"expenses\", component: ExpencesComponent },\n  { path: \"expenses/expence/view\", component: ExpenceViewComponent },\n  { path: \"immigrations\", component: ImmigrationsComponent },\n  { path: \"timeline\", component: ComingsoonPageComponent },\n  { path: \"debit\", component: ComingsoonPageComponent },\n  { path: \"ap_invoices\", component: ComingsoonPageComponent },\n  { path: \"payment_reports\", component: ComingsoonPageComponent },\n  { path: \"invoice_Reports\", component: ComingsoonPageComponent },\n  { path: \"employee_reports\", component: ComingsoonPageComponent },\n  { path: \"employee_timeline\", component: ComingsoonPageComponent },\n  { path: \"prospect_supplier\", component: ComingsoonPageComponent },\n  { path: \"prospect_employee\", component: ComingsoonPageComponent },\n  { path: \"Prospect_position\", component: ComingsoonPageComponent },\n  {\n    path: \"employees/:id/profile\",\n    component: MyprofileComponent,\n  },\n  { path: \"organization\", component: OrganizationComponent },\n  { path: \"freeemaildomain\", component: FreeemaildomainComponent },\n];\n\n@NgModule({\n  imports: [RouterModule, RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SupremeAdminRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\nimport { TableModule } from \"../components/table/table\";\nimport { InputTextModule } from \"../components/inputtext/inputtext\";\nimport { ButtonModule } from \"../components/button/button\";\nimport { DialogModule } from \"../components/dialog/dialog\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { DropdownModule } from \"../components/dropdown/dropdown\";\nimport { ConfirmDialogModule } from \"../components/confirmdialog/confirmdialog\";\nimport { ConfirmationService } from \"../components/api/confirmationservice\";\nimport { ChartModule } from \"../components/chart/chart\";\nimport { SharedServiceModule } from \"@app/shared/shared.module\";\nimport { RadioButtonModule } from \"@app/components/public_api\";\nimport { SupremeAdminRoutingModule } from \"./supreme-admin-routing.module\";\nimport { OrganizationComponent } from \"./organization/organization.component\";\nimport { FreeemaildomainComponent } from \"./freeemaildomain/freeemaildomain.component\";\nimport { EditFreeemaildomainComponent } from \"./freeemaildomain/edit-freeemaildomain/edit-freeemaildomain.component\";\n\n@NgModule({\n  declarations: [\n    OrganizationComponent,\n    FreeemaildomainComponent,\n    EditFreeemaildomainComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    TableModule,\n    InputTextModule,\n    ButtonModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    RadioButtonModule,\n    ReactiveFormsModule,\n    ChartModule,\n    SharedServiceModule,\n    SupremeAdminRoutingModule,\n    ConfirmDialogModule,\n  ],\n  exports: [SharedServiceModule],\n  providers: [ConfirmationService],\n})\nexport class SupremeAdminModule {}\n"]}