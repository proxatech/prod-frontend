{"version":3,"sources":["webpack:///src/app/supreme-admin/supreme-admin.module.ts","webpack:///src/app/supreme-admin/freeemaildomain/freeemaildomain.component.ts","webpack:///src/app/supreme-admin/freeemaildomain/freeemaildomain.component.html","webpack:///src/app/supreme-admin/organization/organization.component.ts","webpack:///src/app/supreme-admin/organization/organization.component.html","webpack:///src/app/supreme-admin/supreme-admin-routing.module.ts","webpack:///src/app/supreme-admin/freeemaildomain/freeemaildomain.service.ts","webpack:///src/app/supreme-admin/freeemaildomain/edit-freeemaildomain/edit-freeemaildomain.component.ts","webpack:///src/app/supreme-admin/freeemaildomain/edit-freeemaildomain/edit-freeemaildomain.component.html","webpack:///src/app/supreme-admin/organization/organization.service.ts"],"names":["SupremeAdminModule","declarations","imports","exports","providers","FreeemaildomainComponent","confirmationService","sharedService","FreeEmailDomainServices","fEDDisplay","loading","status","cols","field","header","getDomain","event","index","lstDomain","getAllFreeEmailDomain","subscribe","res","message","responsePayload","error","fEDomainType","displayDialog","hiddenScroll","fEDomain","domainName","freeEmailProviderDomainsDetailsId","type","undefined","bodyElement","document","getElementById","classList","add","ex","clientErrorMsg","remove","displayScroll","rowData","confirm","accept","deactivateFEDomain","statusCode","severity","summary","detail","activateFEDomain","data","showDialogToAdd","handleChange","selector","templateUrl","styleUrls","OrganizationComponent","organizationService","editemployeeDisplay","addemployeeDisplay","sendMessage","getOrganizations","lstOrganizations","getAllOrganizations","departmentType","deactivateOrganization","organizationDetailsId","activateOrganization","subject","trim","closeBtn","nativeElement","click","organization","sendMessageToOrganization","routes","path","redirectTo","pathMatch","component","SupremeAdminRoutingModule","forChild","http","get","post","put","freeEmailDomain","providedIn","EditFreeemaildomainComponent","fEdomainService","onClose","freeEmailDisplayDomain","isFEDomainExists","addFEDomain","updateFEDomain","errLabel","emit","modalClose","save","OrganizationService"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA4CaA,kB;;;;;cAAAA;;;;2BAAAA,kB;AAAkB,S;AAAA,mBAFlB,CAAC,wFAAD,C;AAAqB,kBAjBvB,CACP,4DADO,EAEP,4DAFO,EAGP,mEAHO,EAIP,+EAJO,EAKP,sEALO,EAMP,sEANO,EAOP,4EAPO,EAQP,0DARO,EASP,6EATO,EAUP,kEAVO,EAWP,oEAXO,EAYP,8EAZO,EAaP,wFAbO,EAcP,2FAdO,CAiBuB,EADtB,8EACsB;;;;4HAErBA,kB,EAAkB;AAAA,yBAvB3B,2FAuB2B,EAtB3B,oGAsB2B,EArB3B,kIAqB2B;AArBC,oBAG5B,4DAH4B,EAI5B,4DAJ4B,EAK5B,mEAL4B,EAM5B,+EAN4B,EAO5B,sEAP4B,EAQ5B,sEAR4B,EAS5B,4EAT4B,EAU5B,0DAV4B,EAW5B,6EAX4B,EAY5B,kEAZ4B,EAa5B,oEAb4B,EAc5B,8EAd4B,EAe5B,wFAf4B,EAgB5B,2FAhB4B,CAqBD;AALR,oBAEX,8EAFW;AAKQ,S;AAHA,O;;;;;wEAGlBA,kB,EAAkB;gBAzB9B,sDAyB8B;iBAzBrB;AACRC,wBAAY,EAAE,CACZ,2FADY,EAEZ,oGAFY,EAGZ,kIAHY,CADN;AAMRC,mBAAO,EAAE,CACP,4DADO,EAEP,4DAFO,EAGP,mEAHO,EAIP,+EAJO,EAKP,sEALO,EAMP,sEANO,EAOP,4EAPO,EAQP,0DARO,EASP,6EATO,EAUP,kEAVO,EAWP,oEAXO,EAYP,8EAZO,EAaP,wFAbO,EAcP,2FAdO,CAND;AAsBRC,mBAAO,EAAE,CAAC,8EAAD,CAtBD;AAuBRC,qBAAS,EAAE,CAAC,wFAAD;AAvBH,W;AAyBqB,U;;;;;;;;;;;;;;;;;;AC5C/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACyCc;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,yCAAqC,UAArC,CAAT;AAAyD,WAAzD;;AAHF;;AAMF;;;;;;AAIE;;AACE;;AACA;;AACF;;;;;;AAHgC;;AAC9B;;AAAA;;AACY;;AAAA;;;;;;AAHhB;;AACE;;AAIA;;AACE;;AACF;;AACF;;;;;;AAPM;;AAAA;;;;;;AAYF;;AACE;;;;AACF;;;;;;;;AADE;;AAAA;;;;;;AAEF;;AACE;;AACF;;;;;;;;AADE;;AAAA;;;;;;AALJ;;AACE;;AAGA;;AAGF;;;;;;AANgB;;AAAA;;AAGA;;AAAA;;;;;;;;AALlB;;AACE;;AAgBA;;AACE;;AACE;;AAKG;;AAA0B;;AAAS;;AAAI;;AAE1C;;AAWE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AAAmC;;AAAI;;AAE1C;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEC;;AAAoC;;AAAQ;;AAEjD;;AACF;;AACF;;AACF;;;;;;;AAvDI;;AACE;;AAAA;;;;;;AAyDN;;AACE;;AACE;;AACF;;AACF;;;;;;;;;;;;;;AAnGN;;AACE;;AAaE;;AAWA;;AAWA;;AA0DA;;AAOF;;AACF;;;;;;AApGI;;AAAA,8FAAgB,OAAhB,EAAgB,mBAAhB,EAAgB,oBAAhB,EAAgB,qEAAhB,EAAgB,WAAhB,EAAgB,IAAhB,EAAgB,MAAhB,EAAgB,EAAhB,EAAgB,uBAAhB,EAAgB,IAAhB,EAAgB,aAAhB,EAAgB,CAAhB,EAAgB,oBAAhB,EAAgB,qEAAhB;;;;;;;;AAsHE;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,yCAAqC,UAArC,CAAT;AAAyD,WAAzD;;AAHF;;AAMF;;;;;;AAIE;;AACE;;AACA;;AACF;;;;;;AAHgC;;AAC9B;;AAAA;;AACY;;AAAA;;;;;;AAHhB;;AACE;;AAIA;;AACE;;AACF;;AACF;;;;;;AAPM;;AAAA;;;;;;AAYF;;AACE;;;;AACF;;;;;;;;AADE;;AAAA;;;;;;AAEF;;AACE;;AACF;;;;;;;;AADE;;AAAA;;;;;;AALJ;;AACE;;AAGA;;AAGF;;;;;;AANgB;;AAAA;;AAGA;;AAAA;;;;;;;;AALlB;;AACE;;AAgBA;;AACE;;AACE;;AAKG;;AAA0B;;AAAS;;AAAI;;AAE1C;;AAWE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AAAmC;;AAAI;;AAE1C;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AAAgC;;AAAM;;AAE3C;;AACF;;AACF;;AACF;;;;;;;AAtDI;;AACE;;AAAA;;;;;;AAwDN;;AACE;;AACE;;AACF;;AACF;;;;;;AAlGN;;AACE;;AAaE;;AAWA;;AAWA;;AAyDA;;AAOF;;AACF;;;;;;AAnGI;;AAAA,8FAAgB,OAAhB,EAAgB,mBAAhB,EAAgB,oBAAhB,EAAgB,qEAAhB,EAAgB,WAAhB,EAAgB,IAAhB,EAAgB,MAAhB,EAAgB,EAAhB,EAAgB,uBAAhB,EAAgB,IAAhB,EAAgB,aAAhB,EAAgB,CAAhB,EAAgB,oBAAhB,EAAgB,qEAAhB;;;;;;;;AA+IV;;AACE;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AACD;;AACH;;;;;;AAJI;;AAAA,2GAA6B,UAA7B,EAA6B,kBAA7B;;;;UD1QOC,wB;AAUX,0CACUC,mBADV,EAEUC,aAFV,EAGUC,uBAHV,EAG0D;AAAA;;AAFhD,eAAAF,mBAAA,GAAAA,mBAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAC,uBAAA,GAAAA,uBAAA;AATH,eAAAC,UAAA,GAAqB,MAArB;AAIP,eAAAC,OAAA,GAAmB,KAAnB;AACA,eAAAC,MAAA,GAAiB,CAAjB;AAKI;;;;qCAEI;AACN,iBAAKC,IAAL,GAAY,CACV;AACA;AACA;AAAEC,mBAAK,EAAE,YAAT;AAAuBC,oBAAM,EAAE;AAA/B,aAHU,EAIV;AAAED,mBAAK,EAAE,QAAT;AAAmBC,oBAAM,EAAE;AAA3B,aAJU,CAAZ;AAMA,iBAAKC,SAAL,CAAe,KAAKJ,MAApB;AACD;;;uCACYK,K,EAAO;AAClB,gBAAIA,KAAK,CAACC,KAAN,IAAe,CAAnB,EAAsB;AACpB,mBAAKN,MAAL,GAAc,CAAd;AACA,mBAAKI,SAAL,CAAe,CAAf;AACD,aAHD,MAGO,IAAIC,KAAK,CAACC,KAAN,IAAe,CAAnB,EAAsB;AAC3B,mBAAKN,MAAL,GAAc,CAAd;AACA,mBAAKI,SAAL,CAAe,CAAf;AACD;AACF;;;oCACSJ,M,EAAgB;AAAA;;AACxB,iBAAKD,OAAL,GAAe,IAAf;AACA,iBAAKQ,SAAL,GAAiB,EAAjB;AACA,iBAAKV,uBAAL,CAA6BW,qBAA7B,CAAmDR,MAAnD,EAA2DS,SAA3D,CACE,UAACC,GAAD,EAAS;AACP,mBAAI,CAACX,OAAL,GAAe,KAAf;AACA,mBAAI,CAACQ,SAAL,GAAiB,EAAjB;AACA,kBAAIG,GAAG,CAACC,OAAJ,IAAe,0BAAnB,EACE,KAAI,CAACJ,SAAL,GAAiBG,GAAG,CAACE,eAArB;AACH,aANH,EAOE,UAACC,KAAD,EAAW;AACT,mBAAI,CAACd,OAAL,GAAe,KAAf;AACD,aATH;AAWD;;;4CACiB;AAChB,iBAAKe,YAAL,GAAoB,KAApB;AACA,iBAAKC,aAAL,GAAqB,IAArB;AACA,iBAAKC,YAAL;AACA,iBAAKC,QAAL,GAAgB;AACdC,wBAAU,EAAE,IADE;AAEdC,+CAAiC,EAAE,IAFrB;AAGdnB,oBAAM,EAAE;AAHM,aAAhB;AAKD;;;+CACoBK,K,EAAO;AAC1B,gBAAIA,KAAK,CAACe,IAAN,IAAc,KAAlB,EAAyB;AACvB,mBAAKhB,SAAL,CAAe,KAAKJ,MAApB;AACD;;AACD,iBAAKc,YAAL,GAAoB,EAApB;AACA,iBAAKC,aAAL,GAAqBM,SAArB;AACD;;;yCACc;AACb,gBAAI;AACF,kBAAIC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB;;AACA,kBAAIF,WAAJ,EAAiB;AACfA,2BAAW,CAACG,SAAZ,CAAsBC,GAAtB,CAA0B,YAA1B;AACD;AACF,aALD,CAKE,OAAOC,EAAP,EAAW;AACX,mBAAKC,cAAL,CAAoBD,EAApB,EAAwB,cAAxB;AACD;AACF;;;0CAEe;AACd,gBAAI;AACF,kBAAIL,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB;;AACA,kBAAIF,WAAJ,EAAiB;AACfA,2BAAW,CAACG,SAAZ,CAAsBI,MAAtB,CAA6B,YAA7B;AACD;AACF,aALD,CAKE,OAAOF,EAAP,EAAW;AACX,mBAAKC,cAAL,CAAoBD,EAApB,EAAwB,eAAxB;AACD;AACF;;;iCAEM;AACL,iBAAKG,aAAL;AACD;;;kCACOC,O,EAAS;AAAA;;AACf,iBAAKpC,mBAAL,CAAyBqC,OAAzB,CAAiC;AAC/BrB,qBAAO,EAAE,qDADsB;AAE/BsB,oBAAM,EAAE,kBAAM;AACZ,sBAAI,UAAJ,CAAYF,OAAZ,EADY,CAEZ;;AACD;AAL8B,aAAjC;AAOD;;;kCACMA,O,EAA0B;AAAA;;AAC/B,gBAAI,KAAK/B,MAAL,IAAe,CAAnB,EAAsB;AACpB,mBAAKH,uBAAL,CAA6BqC,kBAA7B,CACEH,OAAO,CAACZ,iCADV,EAEEV,SAFF,CAEY,UAACC,GAAD,EAAS;AACnB,oBAAIA,GAAG,CAACyB,UAAJ,IAAkB,GAAtB,EAA2B;AACzB,wBAAI,CAACvC,aAAL,CAAmB8B,GAAnB,CAAuB;AACrBU,4BAAQ,EAAE,SADW;AAErBC,2BAAO,EAAE,SAFY;AAGrBC,0BAAM,EAAE5B,GAAG,CAACC;AAHS,mBAAvB;;AAKA,wBAAI,CAACP,SAAL,CAAe,MAAI,CAACJ,MAApB;AACD;AACF,eAXD;AAYD,aAbD,MAaO;AACL,mBAAKH,uBAAL,CAA6B0C,gBAA7B,CACER,OAAO,CAACZ,iCADV,EAEEV,SAFF,CAEY,UAACC,GAAD,EAAS;AACnB,oBAAIA,GAAG,CAACyB,UAAJ,IAAkB,GAAtB,EAA2B;AACzB,wBAAI,CAACvC,aAAL,CAAmB8B,GAAnB,CAAuB;AACrBU,4BAAQ,EAAE,SADW;AAErBC,2BAAO,EAAE,SAFY;AAGrBC,0BAAM,EAAE5B,GAAG,CAACC;AAHS,mBAAvB;;AAKA,wBAAI,CAACP,SAAL,CAAe,MAAI,CAACJ,MAApB;AACD;AACF,eAXD;AAYD;AACF;;;mCACQ+B,O,EAAS;AAChB,iBAAKd,QAAL,GAAgBc,OAAhB;AACD;;;sCACWS,I,EAAuB;AACjC,iBAAKvB,QAAL,GAAgBuB,IAAhB;AACA,iBAAK1B,YAAL,GAAoB,MAApB;AACA,iBAAKC,aAAL,GAAqB,IAArB;AACA,iBAAKC,YAAL;AACD;;;uCACY;AACX,iBAAKlB,UAAL,GAAkB,MAAlB;AACA,iBAAKgC,aAAL;AACD;;;0CAEe;AACd,iBAAKhC,UAAL,GAAkB,MAAlB;AACA,iBAAKgC,aAAL;AACD;;;;;;;yBAlJUpC,wB,EAAwB,+J,EAAA,yI,EAAA,iJ;AAAA,O;;;cAAxBA,wB;AAAwB,4C;AAAA,iB;AAAA,e;AAAA,s0E;AAAA;AAAA;ACZrC;;AAEE;;AAEE;;AACE;;AACE;;AACE;;AACE;;AAA4B;;AAAG;;AAAS;;AAAI;;AAC5C;;AAAmC;;AAAiB;;AACtD;;AACF;;AACA;;AACE;;AAGE;AAAA,qBAAS,IAAA+C,eAAA,EAAT;AAA0B,aAA1B;;AACC;;AAA2B;;AAAqB;;AAErD;;AACF;;AACF;;AAGA;;AAAW;AAAA,qBAAY,IAAAC,YAAA,QAAZ;AAAgC,aAAhC;;AACT;;AACE;;AAuGF;;AACA;;AACE;;AAsGF;;AACF;;AACF;;AAGA;;AAME;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAA0B;;AAC9B;;AAAG;;AAAoD;;AACzD;;AACA;;AACE;;AACE;;AACE;;AAGE;AAAA,qBAAS,2BAAT;AAAyB,aAAzB;;AAEC;;AAAU;;AAEf;;AACA;;AACE;;AAIG;;AAAM;;AAEX;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AAOF;;;;AAjQwC;;AAAA;;AAyGA;;AAAA;;AAiJxB;;AAAA;;;;;;;;;;wEDxQHhD,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACTiD,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAK0B,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEZrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACqCc;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,yCAAqC,UAArC,CAAT;AAAyD,WAAzD;;AAHF;;AAMF;;;;;;AAIE;;AACE;;AACA;;AACF;;;;;;AAHgC;;AAC9B;;AAAA;;AACY;;AAAA;;;;;;AAHhB;;AACE;;AAIA;;AACE;;AACF;;AACF;;;;;;AAPM;;AAAA;;;;;;AAYF;;AACE;;AACF;;;;;;;;AADE;;AAAA;;;;;;AAEF;;AACE;;AACF;;;;;;;;AADE;;AAAA;;;;;;AALJ;;AACE;;AAGA;;AAGF;;;;;;AANgB;;AAAA;;AAGA;;AAAA;;;;;;;;AALlB;;AACE;;AAQA;;AACE;;AACE;;AAKG;;AAA0B;;AAAS;;AAAI;;AAE1C;;AAWE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEC;;AAAoC;;AAAQ;;AAE/C;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AAAwC;;AAAY;;AAEzD;;AACF;;AACF;;AACF;;;;;;;AAhDI;;AACE;;AAAA;;;;;;AAkDN;;AACE;;AACE;;AACF;;AACF;;;;;;;;;;;;;;AAhGN;;AACE;;AAiBE;;AAWA;;AAWA;;AAmDA;;AAOF;;AACF;;;;;;AAjGI;;AAAA,8FAAgB,OAAhB,EAAgB,0BAAhB,EAAgB,oBAAhB,EAAgB,qEAAhB,EAAgB,WAAhB,EAAgB,IAAhB,EAAgB,MAAhB,EAAgB,EAAhB,EAAgB,uBAAhB,EAAgB,IAAhB,EAAgB,aAAhB,EAAgB,CAAhB,EAAgB,oBAAhB,EAAgB,qEAAhB;;;;;;;;AAuHE;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,yCAAqC,UAArC,CAAT;AAAyD,WAAzD;;AAHF;;AAMF;;;;;;AAIE;;AACE;;AACA;;AACF;;;;;;AAHgC;;AAC9B;;AAAA;;AACY;;AAAA;;;;;;AAHhB;;AACE;;AAIA;;AACE;;AACF;;AACF;;;;;;AAPM;;AAAA;;;;;;AAWJ;;AACE;;AAMF;;;;;;;;AANE;;AAAA;;;;;;;;AAFJ;;AACE;;AAQA;;AACE;;AACE;;AAKG;;AAA0B;;AAAS;;AAAI;;AAE1C;;AAcE;;AAIE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AAAoC;;AAAM;;AAE7C;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACC;;AAAoC;;AAAY;;AAErD;;AACF;;AACF;;AACF;;;;;;;AAlDI;;AACE;;AAAA;;;;;;AAoDN;;AACE;;AACE;;AACF;;AACF;;;;;;AAlGN;;AACE;;AAiBE;;AAWA;;AAWA;;AAqDA;;AAOF;;AACF;;;;;;AAnGI;;AAAA,8FAAgB,OAAhB,EAAgB,0BAAhB,EAAgB,oBAAhB,EAAgB,qEAAhB,EAAgB,WAAhB,EAAgB,IAAhB,EAAgB,MAAhB,EAAgB,EAAhB,EAAgB,uBAAhB,EAAgB,IAAhB,EAAgB,aAAhB,EAAgB,CAAhB,EAAgB,oBAAhB,EAAgB,qEAAhB;;;;UD7GCC,qB;AAcX,uCACUnD,mBADV,EAEUC,aAFV,EAGUmD,mBAHV,EAGkD;AAAA;;AAFxC,eAAApD,mBAAA,GAAAA,mBAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAmD,mBAAA,GAAAA,mBAAA;AAbH,eAAAC,mBAAA,GAA8B,MAA9B;AACA,eAAAC,kBAAA,GAA6B,MAA7B;AAIP,eAAAlD,OAAA,GAAmB,KAAnB;AAES,eAAAmD,WAAA,GAA2B,EAA3B;AAOL;;;;qCAEI;AACN,iBAAKjD,IAAL,GAAY,CACV;AACA;AAAEC,mBAAK,EAAE,kBAAT;AAA6BC,oBAAM,EAAE;AAArC,aAFU,EAGV;AAAED,mBAAK,EAAE,aAAT;AAAwBC,oBAAM,EAAE;AAAhC,aAHU,EAIV;AAAED,mBAAK,EAAE,eAAT;AAA0BC,oBAAM,EAAE;AAAlC,aAJU,CAAZ;AAMA,iBAAKgD,gBAAL;AACA,iBAAKnD,MAAL,GAAc,CAAd;AACD;;;uCACYK,K,EAAO;AAClB,gBAAIA,KAAK,CAACC,KAAN,IAAe,CAAnB,EAAsB;AACpB,mBAAKN,MAAL,GAAc,CAAd;AACA,mBAAKmD,gBAAL,CAAsB,CAAtB;AACD,aAHD,MAGO,IAAI9C,KAAK,CAACC,KAAN,IAAe,CAAnB,EAAsB;AAC3B,mBAAKN,MAAL,GAAc,CAAd;AACA,mBAAKmD,gBAAL,CAAsB,CAAtB;AACD;AACF;;;6CACoC;AAAA;;AAAA,gBAApBnD,MAAoB,uEAAH,CAAG;AACnC,iBAAKD,OAAL,GAAe,IAAf;AACA,iBAAKqD,gBAAL,GAAwB,EAAxB;AACA,iBAAKL,mBAAL,CAAyBM,mBAAzB,CAA6CrD,MAA7C,EAAqDS,SAArD,CACE,UAACC,GAAD,EAAS;AACP,oBAAI,CAACX,OAAL,GAAe,KAAf;AACA,oBAAI,CAACqD,gBAAL,GAAwB,EAAxB;AACA,kBAAI1C,GAAG,CAACC,OAAJ,IAAe,eAAnB,EACE,MAAI,CAACyC,gBAAL,GAAwB1C,GAAG,CAACE,eAA5B;AACH,aANH,EAOE,UAACC,KAAD,EAAW;AACT,oBAAI,CAACd,OAAL,GAAe,KAAf;AACD,aATH;AAWD;;;4CACiB;AAChB,iBAAKuD,cAAL,GAAsB,KAAtB,CADgB,CAEhB;AACD;;;yCAEc;AACb,gBAAI;AACF,kBAAIhC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB;;AACA,kBAAIF,WAAJ,EAAiB;AACfA,2BAAW,CAACG,SAAZ,CAAsBC,GAAtB,CAA0B,YAA1B;AACD;AACF,aALD,CAKE,OAAOC,EAAP,EAAW;AACX,mBAAKC,cAAL,CAAoBD,EAApB,EAAwB,cAAxB;AACD;AACF;;;0CAEe;AACd,gBAAI;AACF,kBAAIL,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB;;AACA,kBAAIF,WAAJ,EAAiB;AACfA,2BAAW,CAACG,SAAZ,CAAsBI,MAAtB,CAA6B,YAA7B;AACD;AACF,aALD,CAKE,OAAOF,EAAP,EAAW;AACX,mBAAKC,cAAL,CAAoBD,EAApB,EAAwB,eAAxB;AACD;AACF;;;iCAEM;AACL,iBAAKG,aAAL;AACD;;;kCACOC,O,EAAS;AAAA;;AACf,iBAAKpC,mBAAL,CAAyBqC,OAAzB,CAAiC;AAC/BrB,qBAAO,EAAE,qDADsB;AAE/BsB,oBAAM,EAAE,kBAAM;AACZ,sBAAI,UAAJ,CAAYF,OAAZ,EADY,CAEZ;;AACD;AAL8B,aAAjC;AAOD;;;kCACMA,O,EAAuB;AAAA;;AAC5B,gBAAI,KAAK/B,MAAL,IAAe,CAAnB,EAAsB;AACpB,mBAAK+C,mBAAL,CACGQ,sBADH,CAC0BxB,OAAO,CAACyB,qBADlC,EAEG/C,SAFH,CAEa,UAACC,GAAD,EAAS;AAClB,oBAAIA,GAAG,CAACC,OAAJ,IAAe,oCAAnB,EAAyD;AACvD,wBAAI,CAACI,aAAL,GAAqB,KAArB;;AACA,wBAAI,CAACoC,gBAAL,CAAsB,MAAI,CAACnD,MAA3B;AACD;AACF,eAPH;AAQD,aATD,MASO;AACL,mBAAK+C,mBAAL,CACGU,oBADH,CACwB1B,OAAO,CAACyB,qBADhC,EAEG/C,SAFH,CAEa,UAACC,GAAD,EAAS;AAClB,oBAAIA,GAAG,CAACC,OAAJ,IAAe,kCAAnB,EAAuD;AACrD,wBAAI,CAACI,aAAL,GAAqB,KAArB;;AACA,wBAAI,CAACoC,gBAAL,CAAsB,MAAI,CAACnD,MAA3B;AACD;AACF,eAPH;AAQD;AACF;;;oDAEyB+B,O,EAAuB;AAAA;;AAC/C,gBAAI,CAAC,KAAKmB,WAAL,CAAiBQ,OAAlB,IAA6B,KAAKR,WAAL,CAAiBQ,OAAjB,CAAyBC,IAAzB,MAAmC,EAApE,EAAwE;AACtE;AACD;;AACD,iBAAKT,WAAL,CAAiBM,qBAAjB,GAAyCzB,OAAO,CAACyB,qBAAjD;AACA,iBAAKT,mBAAL,CAAyBG,WAAzB,CAAqC,KAAKA,WAA1C,EAAuDzC,SAAvD,CAAiE,UAACC,GAAD,EAAS;AACxE,kBAAIA,GAAG,CAACC,OAAJ,IAAe,+BAAnB,EAAoD;AAClD,sBAAI,CAACf,aAAL,CAAmB8B,GAAnB,CAAuB;AACrBU,0BAAQ,EAAE,SADW;AAErBC,yBAAO,EAAE,SAFY;AAGrBC,wBAAM,EAAE5B,GAAG,CAACC;AAHS,iBAAvB;AAKD,eAND,MAMO;AACL,sBAAI,CAACf,aAAL,CAAmB8B,GAAnB,CAAuB;AACrBU,0BAAQ,EAAE,OADW;AAErBC,yBAAO,EAAE,OAFY;AAGrBC,wBAAM,EAAE5B,GAAG,CAACC;AAHS,iBAAvB;AAKD;AACF,aAdD;AAeA,iBAAKiD,QAAL,CAAcC,aAAd,CAA4BC,KAA5B;AACD;;;mCAEQ/B,O,EAAS;AAChB,iBAAKgC,YAAL,GAAoBhC,OAApB;AACD;;;wCAEaA,O,EAAS;AACrB,iBAAKgC,YAAL,GAAoBhC,OAApB;AACD;;;sCAEWS,I,EAAoB;AAC9B,iBAAKuB,YAAL,GAAoBvB,IAApB;AACA,iBAAKc,cAAL,GAAsB,MAAtB;AACA,iBAAKtC,YAAL;AACD;;;uCACY;AACX,iBAAKgC,mBAAL,GAA2B,MAA3B;AACA,iBAAKlB,aAAL;AACD;;;;;;;yBA1JUgB,qB,EAAqB,+J,EAAA,yI,EAAA,0I;AAAA,O;;;cAArBA,qB;AAAqB,yC;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACblC;;AAEE;;AAEE;;AACE;;AACE;;AACE;;AACE;;AAA4B;;AAAG;;AAAS;;AAAI;;AAC5C;;AAAmC;;AAAa;;AAClD;;AACF;;AACF;;AACF;;AAGA;;AAAW;AAAA,qBAAY,IAAAJ,YAAA,QAAZ;AAAgC,aAAhC;;AACT;;AACE;;AAoGF;;AACA;;AACE;;AAsGF;;AACF;;AACF;;AACA;;AAME;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAqB;;AACzB;;AAAG;;AAA+C;;AACpD;;AACA;;AACE;;AACE;;AACE;;AAGE;AAAA,qBAAS,+BAAT;AAA6B,aAA7B;;AAEC;;AAAU;;AAEf;;AACA;;AACE;;AAIG;;AAAM;;AAEX;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AAME;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAY;;AAClB;;AACA;;AACE;;AACE;;AACE;;AACE;;AACG;;AAAO;;AAA0B;;AAAC;;AAAO;;AAE5C;;AAGE;AAAA;AAAA;;AAHF;;AAOF;;AACF;;AACA;;AACE;;AACE;;AACG;;AAAI;;AAA0B;;AAAC;;AAAO;;AAEzC;;AAIE;AAAA;AAAA;;AAED;;AACH;;AACF;;AACA;;AACE;;AAEE;AAAA,qBAAS,IAAAsB,yBAAA,kBAAT;AAAgD,aAAhD;;AAEC;;AAAI;;AAET;;AACA;;AACE;;AAKG;;AAAM;;AAEX;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAtTwC;;AAAA;;AAsGA;;AAAA;;AAqKpB;;AAAA;;AAeA;;AAAA;;;;;;;;;wED/RPlB,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTH,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKuB,U;;;;;;;;;;kBAW/B;;;kBACA,uD;mBAAU,U;;;;;;;;;;;;;;;;;;;;AEzBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAMoB,MAAM,GAAW,CACrB;AAAEC,YAAI,EAAE,EAAR;AAAYC,kBAAU,EAAE,WAAxB;AAAqCC,iBAAS,EAAE;AAAhD,OADqB,EAErB;AAAEF,YAAI,EAAE,WAAR;AAAqBG,iBAAS,EAAE;AAAhC,OAFqB,EAGrB;AAAEH,YAAI,EAAE,cAAR;AAAwBG,iBAAS,EAAE;AAAnC,OAHqB,EAIrB;AAAEH,YAAI,EAAE,iBAAR;AAA2BG,iBAAS,EAAE;AAAtC,OAJqB,CAAvB;;UAWaC,yB;;;;;cAAAA;;;;2BAAAA,yB;AAAyB,S;AAAA,kBAH3B,CAAC,4DAAD,EAAe,6DAAaC,QAAb,CAAsBN,MAAtB,CAAf,CAG2B,EAF1B,4DAE0B;;;;4HAAzBK,yB,EAAyB;AAAA,oBAH1B,4DAG0B,EAHZ,4DAGY;AAHZ,oBACd,4DADc;AAGY,S;AAFd,O;;;;;wEAEXA,yB,EAAyB;gBAJrC,sDAIqC;iBAJ5B;AACR/E,mBAAO,EAAE,CAAC,4DAAD,EAAe,6DAAagF,QAAb,CAAsBN,MAAtB,CAAf,CADD;AAERzE,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAI4B,U;;;;;;;;;;;;;;;;;;ACjBtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaK,uB;AACX,yCAAoB2E,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;gDAClBxE,M,EAAgB;AACpC,mBAAO,KAAKwE,IAAL,CAAUC,GAAV,mDACsCzE,MADtC,EAAP;AAGD;;;sCACWiB,Q,EAAe;AACzB,mBAAO,KAAKuD,IAAL,CAAUE,IAAV,oEACuDzD,QAAQ,CAACC,UADhE,GAEL,EAFK,CAAP;AAID;;;yCACcD,Q,EAA2B;AACxC,mBAAO,KAAKuD,IAAL,CAAUE,IAAV,CACL,qCADK,EAELzD,QAFK,CAAP;AAID;;;2CACgBE,iC,EAA2C;AAC1D,mBAAO,KAAKqD,IAAL,CAAUG,GAAV,iDACoCxD,iCADpC,GAEL,EAFK,CAAP;AAID;;;6CACkBA,iC,EAA2C;AAC5D,mBAAO,KAAKqD,IAAL,CAAUG,GAAV,mDACsCxD,iCADtC,GAEL,EAFK,CAAP;AAID;;;2CACgByD,e,EAAyB;AACxC,mBAAO,KAAKJ,IAAL,CAAUC,GAAV,yDAC4CG,eAD5C,EAAP;AAGD;;;;;;;yBAnCU/E,uB,EAAuB,uH;AAAA,O;;;eAAvBA,uB;AAAuB,iBAAvBA,uBAAuB,K;AAAA,oBAFtB;;;;;wEAEDA,uB,EAAuB;gBAHnC,wDAGmC;iBAHxB;AACVgF,sBAAU,EAAE;AADF,W;AAGwB,U;;;;;;;;;;;;;;;;;;;;;;ACRpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBU;;AACE;;AACE;;AACF;;AACF;;;;;;AAFI;;AAAA;;;;;;AA4BA;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;;;;;UD1CDC,4B;AASX,8CACUC,eADV,EAEUnF,aAFV,EAEsC;AAAA;;AAD5B,eAAAmF,eAAA,GAAAA,eAAA;AACA,eAAAnF,aAAA,GAAAA,aAAA;AATA,eAAAoF,OAAA,GAAU,IAAI,0DAAJ,EAAV;AACV,eAAAjE,aAAA,GAAyB,IAAzB;AAIO,eAAAkE,sBAAA,GAAiC,MAAjC;AAKH;;;;qCAEI;AACN,iBAAKxC,eAAL;AACD;;;4CACiB;AAChB,iBAAKwC,sBAAL,GAA8B,OAA9B;AACA,iBAAKjE,YAAL;AACD;;;yCAEc;AACb,gBAAI;AACF,kBAAIM,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB;;AACA,kBAAIF,WAAJ,EAAiB;AACfA,2BAAW,CAACG,SAAZ,CAAsBC,GAAtB,CAA0B,YAA1B;AACD;AACF,aALD,CAKE,OAAOC,EAAP,EAAW;AACX,mBAAKC,cAAL,CAAoBD,EAApB,EAAwB,cAAxB;AACD;AACF;;;0CAEe;AACd,gBAAI;AACF,kBAAIL,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAlB;;AACA,kBAAIF,WAAJ,EAAiB;AACfA,2BAAW,CAACG,SAAZ,CAAsBI,MAAtB,CAA6B,YAA7B;AACD;AACF,aALD,CAKE,OAAOF,EAAP,EAAW;AACX,mBAAKC,cAAL,CAAoBD,EAApB,EAAwB,eAAxB;AACD;AACF;;;iCAEM;AAAA;;AACL,iBAAKoD,eAAL,CAAqBG,gBAArB,CAAsC,KAAKjE,QAAL,CAAcC,UAApD,EAAgET,SAAhE,CACE,UAACC,GAAD,EAAS;AACP,kBAAIA,GAAG,CAACyB,UAAJ,IAAkB,GAAtB,EAA2B;AACzB,oBAAI,MAAI,CAACrB,YAAL,IAAqB,KAAzB,EAAgC;AAC9B,wBAAI,CAACqE,WAAL,CAAiB,MAAI,CAAClE,QAAtB;AACD,iBAFD,MAEO,IAAI,MAAI,CAACH,YAAL,IAAqB,MAAzB,EAAiC;AACtC,wBAAI,CAACsE,cAAL,CAAoB,MAAI,CAACnE,QAAzB;AACD;AACF,eAND,MAMO;AACL,sBAAI,CAACoE,QAAL,GAAgB3E,GAAG,CAACC,OAApB;AACA,sBAAI,CAACM,QAAL,GAAgB;AACdC,4BAAU,EAAE,EADE;AAEdC,mDAAiC,EAAE,IAFrB;AAGdnB,wBAAM,EAAE;AAHM,iBAAhB;AAKD;AACF,aAhBH,EAiBE,UAACa,KAAD,EAAW;AACT,oBAAI,CAACwE,QAAL,GAAgBxE,KAAhB;AACD,aAnBH;AAqBD;;;sCACWI,Q,EAA2B;AAAA;;AACrC,iBAAK8D,eAAL,CAAqBI,WAArB,CAAiClE,QAAjC,EAA2CR,SAA3C,CAAqD,UAACC,GAAD,EAAS;AAC5D,kBAAIA,GAAG,CAACyB,UAAJ,IAAkB,GAAtB,EAA2B;AACzB,sBAAI,CAAC8C,sBAAL,GAA8B,MAA9B;;AACA,sBAAI,CAACrF,aAAL,CAAmB8B,GAAnB,CAAuB;AACrBU,0BAAQ,EAAE,SADW;AAErBC,yBAAO,EAAE,SAFY;AAGrBC,wBAAM,EAAE5B,GAAG,CAACC;AAHS,iBAAvB;AAKD;;AACD,oBAAI,CAACmB,aAAL;;AACA,oBAAI,CAACkD,OAAL,CAAaM,IAAb,CAAkB;AAAElE,oBAAI,EAAE;AAAR,eAAlB;AACD,aAXD;AAYD;;;yCACcH,Q,EAA2B;AAAA;;AACxC,iBAAK8D,eAAL,CAAqBK,cAArB,CAAoCnE,QAApC,EAA8CR,SAA9C,CAAwD,UAACC,GAAD,EAAS;AAC/D,kBAAKA,GAAG,CAACyB,UAAJ,GAAiB,GAAtB,EAA4B;AAC1B,uBAAI,CAAC8C,sBAAL,GAA8B,MAA9B;;AACA,uBAAI,CAACrF,aAAL,CAAmB8B,GAAnB,CAAuB;AACrBU,0BAAQ,EAAE,SADW;AAErBC,yBAAO,EAAE,SAFY;AAGrBC,wBAAM,EAAE5B,GAAG,CAACC;AAHS,iBAAvB;AAKD;;AACD,qBAAI,CAACmB,aAAL;;AACA,qBAAI,CAACkD,OAAL,CAAaM,IAAb,CAAkB;AAAElE,oBAAI,EAAE;AAAR,eAAlB;AACD,aAXD;AAYD;;;uCACY;AACX,iBAAK6D,sBAAL,GAA8B,MAA9B;AACA,iBAAKnD,aAAL;AACA,iBAAKkD,OAAL,CAAaM,IAAb,CAAkB;AAAElE,kBAAI,EAAE;AAAR,aAAlB;AACD;;;;;;;yBAnGU0D,4B,EAA4B,iJ,EAAA,yI;AAAA,O;;;cAA5BA,4B;AAA4B,iD;AAAA;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,8uB;AAAA;AAAA;ACVzC;;AAOE;;AACE;;AACE;;AACE;;AAAwB;;AAAoC;;AAC5D;;AAAoC;AAAA,qBAAS,IAAAS,UAAA,EAAT;AAAqB,aAArB;;AAClC;;AAAyB;;AAAC;;AAC5B;;AACF;;AACA;;AACE;;AACE;;AAKA;;AACE;;AACE;;AACE;;AACG;;AAAK;;AAA0B;;AAAC;;AAAO;;AAE1C;;AAGE;AAAA;AAAA;;AAHF;;AAOF;;AACF;;AACF;;AAEA;;AACE;;AAKE;AAAA,qBAAS,IAAAC,IAAA,EAAT;AAAe,aAAf;;AAEA;;AAGA;;AAGF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AA1DE;;AAS8B;;AAAA;;AAOL;;AAAA;;AAcT;;AAAA;;AAWJ;;AAAA;;AAKc;;AAAA;;AAGA;;AAAA;;;;;;;;;wEDxCfV,4B,EAA4B;gBALxC,uDAKwC;iBAL9B;AACTnC,oBAAQ,EAAE,0BADD;AAETC,uBAAW,EAAE,uCAFJ;AAGTC,qBAAS,EAAE,CAAC,sCAAD;AAHF,W;AAK8B,U;;;;;;;;kBACtC;;;kBACA;;;kBAEA;;;;;;;;;;;;;;;;;;;;AEdH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUa4C,mB;AAET,qCAAoBjB,IAApB,EAAmC;AAAA;;AAAf,eAAAA,IAAA,GAAAA,IAAA;AAEnB;;;;8CACmBxE,M,EAAa;AAC7B,mBAAO,KAAKwE,IAAL,CAAUC,GAAV,+CAAgFzE,MAAhF,EAAP;AACH;;;+CACoBwD,qB,EAA4B;AAC7C,mBAAO,KAAKgB,IAAL,CAAUG,GAAV,4CAA6EnB,qBAA7E,GAAqG,EAArG,CAAP;AACH;;;iDACsBA,qB,EAA4B;AAC/C,mBAAO,KAAKgB,IAAL,CAAUG,GAAV,8CAA+EnB,qBAA/E,uBAAuH,EAAvH,CAAP;AACH;;;sCACWN,Y,EAAuB;AAC/B,mBAAO,KAAKsB,IAAL,CAAUE,IAAV,+CAA8ExB,YAA9E,CAAP;AACH;;;;;;;yBAhBQuC,mB,EAAmB,uH;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB,K;AAAA,oBAFjB;;;;;wEAEFA,mB,EAAmB;gBAH/B,wDAG+B;iBAHpB;AACRZ,sBAAU,EAAC;AADH,W;AAGoB,U","file":"supreme-admin-supreme-admin-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\nimport { TableModule } from \"../components/table/table\";\nimport { InputTextModule } from \"../components/inputtext/inputtext\";\nimport { ButtonModule } from \"../components/button/button\";\nimport { DialogModule } from \"../components/dialog/dialog\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { DropdownModule } from \"../components/dropdown/dropdown\";\nimport { ConfirmDialogModule } from \"../components/confirmdialog/confirmdialog\";\nimport { ConfirmationService } from \"../components/api/confirmationservice\";\nimport { ChartModule } from \"../components/chart/chart\";\nimport { SharedServiceModule } from \"@app/shared/shared.module\";\nimport { RadioButtonModule } from \"@app/components/public_api\";\nimport { SupremeAdminRoutingModule } from \"./supreme-admin-routing.module\";\nimport { OrganizationComponent } from \"./organization/organization.component\";\nimport { FreeemaildomainComponent } from \"./freeemaildomain/freeemaildomain.component\";\nimport { EditFreeemaildomainComponent } from \"./freeemaildomain/edit-freeemaildomain/edit-freeemaildomain.component\";\n\n@NgModule({\n  declarations: [\n    OrganizationComponent,\n    FreeemaildomainComponent,\n    EditFreeemaildomainComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    TableModule,\n    InputTextModule,\n    ButtonModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    RadioButtonModule,\n    ReactiveFormsModule,\n    ChartModule,\n    SharedServiceModule,\n    SupremeAdminRoutingModule,\n    ConfirmDialogModule,\n  ],\n  exports: [SharedServiceModule],\n  providers: [ConfirmationService],\n})\nexport class SupremeAdminModule {}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ConfirmationService } from \"src/app/components/api/confirmationservice\";\nimport { FreeEmailDomainServices } from \"./freeemaildomain.service\";\nimport { FreeEmailDomain } from \"@app/shared/models/freeemaildomain.model\";\nimport { SharedService } from \"@app/shared/shared.service\";\n\n@Component({\n  selector: \"app-freeemaildomain\",\n  templateUrl: \"./freeemaildomain.component.html\",\n  styleUrls: [\"./freeemaildomain.component.css\"],\n})\nexport class FreeemaildomainComponent implements OnInit {\n  cols: any[];\n  displayDialog: boolean;\n  clientErrorMsg: any;\n  public fEDDisplay: string = \"none\";\n  fEDomainType: string;\n  fEDomain: FreeEmailDomain;\n  lstDomain: FreeEmailDomain[];\n  loading: boolean = false;\n  status: number = 1;\n  constructor(\n    private confirmationService: ConfirmationService,\n    private sharedService: SharedService,\n    private FreeEmailDomainServices: FreeEmailDomainServices\n  ) {}\n\n  ngOnInit(): void {\n    this.cols = [\n      // { field: 'departmentDetailsId', header: 'ID' },\n      // { field: \"freeEmailProviderDomainsDetailsId\", header: \"ID\" },\n      { field: \"domainName\", header: \"Domain Name\" },\n      { field: \"status\", header: \"Status\" },\n    ];\n    this.getDomain(this.status);\n  }\n  handleChange(event) {\n    if (event.index == 0) {\n      this.status = 1;\n      this.getDomain(1);\n    } else if (event.index == 1) {\n      this.status = 0;\n      this.getDomain(0);\n    }\n  }\n  getDomain(status: number) {\n    this.loading = true;\n    this.lstDomain = [];\n    this.FreeEmailDomainServices.getAllFreeEmailDomain(status).subscribe(\n      (res) => {\n        this.loading = false;\n        this.lstDomain = [];\n        if (res.message == \"freeEmailProviderDomains\")\n          this.lstDomain = res.responsePayload as FreeEmailDomain[];\n      },\n      (error) => {\n        this.loading = false;\n      }\n    );\n  }\n  showDialogToAdd() {\n    this.fEDomainType = \"Add\";\n    this.displayDialog = true;\n    this.hiddenScroll();\n    this.fEDomain = {\n      domainName: null,\n      freeEmailProviderDomainsDetailsId: null,\n      status: null,\n    };\n  }\n  onFEDomainCloseClick(event) {\n    if (event.type == \"add\") {\n      this.getDomain(this.status);\n    }\n    this.fEDomainType = \"\";\n    this.displayDialog = undefined;\n  }\n  hiddenScroll() {\n    try {\n      let bodyElement = document.getElementById(\"modalbody\") as HTMLElement;\n      if (bodyElement) {\n        bodyElement.classList.add(\"modal-open\");\n      }\n    } catch (ex) {\n      this.clientErrorMsg(ex, \"hiddenScroll\");\n    }\n  }\n\n  displayScroll() {\n    try {\n      let bodyElement = document.getElementById(\"modalbody\") as HTMLElement;\n      if (bodyElement) {\n        bodyElement.classList.remove(\"modal-open\");\n      }\n    } catch (ex) {\n      this.clientErrorMsg(ex, \"displayScroll\");\n    }\n  }\n\n  save() {\n    this.displayScroll();\n  }\n  confirm(rowData) {\n    this.confirmationService.confirm({\n      message: \"Are you sure that you want to Inactivate this data?\",\n      accept: () => {\n        this.delete(rowData);\n        //Actual logic to perform a confirmation\n      },\n    });\n  }\n  delete(rowData: FreeEmailDomain) {\n    if (this.status == 1) {\n      this.FreeEmailDomainServices.deactivateFEDomain(\n        rowData.freeEmailProviderDomainsDetailsId\n      ).subscribe((res) => {\n        if (res.statusCode == 200) {\n          this.sharedService.add({\n            severity: \"success\",\n            summary: \"Success\",\n            detail: res.message,\n          });\n          this.getDomain(this.status);\n        }\n      });\n    } else {\n      this.FreeEmailDomainServices.activateFEDomain(\n        rowData.freeEmailProviderDomainsDetailsId\n      ).subscribe((res) => {\n        if (res.statusCode == 200) {\n          this.sharedService.add({\n            severity: \"success\",\n            summary: \"Success\",\n            detail: res.message,\n          });\n          this.getDomain(this.status);\n        }\n      });\n    }\n  }\n  onDelete(rowData) {\n    this.fEDomain = rowData;\n  }\n  onRowSelect(data: FreeEmailDomain) {\n    this.fEDomain = data;\n    this.fEDomainType = \"Edit\";\n    this.displayDialog = true;\n    this.hiddenScroll();\n  }\n  modalClose() {\n    this.fEDDisplay = \"none\";\n    this.displayScroll();\n  }\n\n  closeAddmodal() {\n    this.fEDDisplay = \"none\";\n    this.displayScroll();\n  }\n}\n","<div class=\"page-wrapper\">\n  <!-- Page Content -->\n  <div class=\"content container-fluid\">\n    <!-- Page Header -->\n    <div class=\"page-header\">\n      <div class=\"row align-items-center\">\n        <div class=\"col\">\n          <ul class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\"><a>Dashboard</a></li>\n            <li class=\"breadcrumb-item active\">Free Email Domain</li>\n          </ul>\n        </div>\n        <div class=\"col-auto float-right ml-auto\">\n          <a\n            href=\"javascript:void(0)\"\n            class=\"btn add-btn\"\n            (click)=\"showDialogToAdd()\"\n            ><i class=\"fa fa-plus\"></i> Add Free Email Domain</a\n          >\n        </div>\n      </div>\n    </div>\n    <!-- /Page Header -->\n    <!-- /Search Filter -->\n    <p-tabView (onChange)=\"handleChange($event)\">\n      <p-tabPanel header=\"Active Free Email Domain\">\n        <div class=\"col pl-0 pr-0 mt-2\" *ngIf=\"!loading\">\n          <p-table\n            [columns]=\"cols\"\n            [value]=\"lstDomain\"\n            [rowsPerPageOptions]=\"[10, 25, 50]\"\n            styleClass=\"ui-table-customers\"\n            #dt\n            [paginator]=\"true\"\n            [rows]=\"10\"\n            [showCurrentPageReport]=\"true\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n            [filterDelay]=\"0\"\n            [globalFilterFields]=\"['domainName', 'status']\"\n          >\n            <ng-template pTemplate=\"caption\">\n              .\n              <div class=\"ui-table-globalfilter-container\">\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\n                  placeholder=\"Search\"\n                />\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\" let-columns>\n              <tr>\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n                  {{ col.header }}\n                  <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n                <th class=\"actions\">\n                  Actions\n                </th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n              <tr [pSelectableRow]=\"rowData\">\n                <td *ngFor=\"let col of columns\">\n                  <ng-container *ngIf=\"col.field == 'status'\">\n                    {{ rowData[col.field] | status }}\n                  </ng-container>\n                  <ng-container *ngIf=\"col.field != 'status'\">\n                    {{ rowData[col.field] }}\n                  </ng-container>\n                </td>\n                <!-- <td class=\"actions\">\n                                  <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                      <button title=\"Edit\" (click)=\"onRowSelect(rowData)\" type=\"button\" class=\"mr-2 btn btn-secondary\"><i  class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></button>\n                                      <button title=\"Delete\" (click)=\"delete(rowData)\" type=\"button\" class=\"btn btn-danger\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>\n                                    </div>\n                                  \n                                 \n                              </td> -->\n                <td class=\"actions\">\n                  <div class=\"dropdown dropdown-action\">\n                    <a\n                      href=\"#\"\n                      class=\"action-icon dropdown-toggle\"\n                      data-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                      ><i class=\"material-icons\">more_vert</i></a\n                    >\n                    <div\n                      class=\"dropdown-menu dropdown-menu-right\"\n                      x-placement=\"top-end\"\n                      style=\"\n                        position: absolute;\n                        will-change: transform;\n                        top: 0px;\n                        left: 0px;\n                        transform: translate3d(72px, -2px, 0px);\n                      \"\n                    >\n                      <a\n                        class=\"dropdown-item\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        (click)=\"onRowSelect(rowData)\"\n                        ><i class=\"fa fa-pencil m-r-5\"></i> Edit</a\n                      >\n                      <a\n                        class=\"dropdown-item delete\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        (click)=\"onDelete(rowData)\"\n                        data-target=\"#delete_Domain\"\n                        ><i class=\"fa fa-trash-o m-r-5\"></i> Inactive</a\n                      >\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td colspan=\"4\" style=\"text-align: left;\">\n                  No Free Email found.\n                </td>\n              </tr>\n            </ng-template>\n          </p-table>\n        </div>\n      </p-tabPanel>\n      <p-tabPanel header=\"Inactive Free Email Doamin\">\n        <div class=\"col pl-0 pr-0 mt-2\" *ngIf=\"!loading\">\n          <p-table\n            [columns]=\"cols\"\n            [value]=\"lstDomain\"\n            [rowsPerPageOptions]=\"[10, 25, 50]\"\n            styleClass=\"ui-table-customers\"\n            #dt\n            [paginator]=\"true\"\n            [rows]=\"10\"\n            [showCurrentPageReport]=\"true\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n            [filterDelay]=\"0\"\n            [globalFilterFields]=\"['domainName', 'status']\"\n          >\n            <ng-template pTemplate=\"caption\">\n              .\n              <div class=\"ui-table-globalfilter-container\">\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\n                  placeholder=\"Search\"\n                />\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\" let-columns>\n              <tr>\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n                  {{ col.header }}\n                  <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n                <th class=\"actions\">\n                  Actions\n                </th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n              <tr [pSelectableRow]=\"rowData\">\n                <td *ngFor=\"let col of columns\">\n                  <ng-container *ngIf=\"col.field == 'status'\">\n                    {{ rowData[col.field] | status }}\n                  </ng-container>\n                  <ng-container *ngIf=\"col.field != 'status'\">\n                    {{ rowData[col.field] }}\n                  </ng-container>\n                </td>\n                <!-- <td class=\"actions\">\n                                          <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                              <button title=\"Edit\" (click)=\"onRowSelect(rowData)\" type=\"button\" class=\"mr-2 btn btn-secondary\"><i  class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></button>\n                                              <button title=\"Delete\" (click)=\"delete(rowData)\" type=\"button\" class=\"btn btn-danger\"><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>\n                                            </div>\n                                          \n                                         \n                                      </td> -->\n                <td class=\"actions\">\n                  <div class=\"dropdown dropdown-action\">\n                    <a\n                      href=\"#\"\n                      class=\"action-icon dropdown-toggle\"\n                      data-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                      ><i class=\"material-icons\">more_vert</i></a\n                    >\n                    <div\n                      class=\"dropdown-menu dropdown-menu-right\"\n                      x-placement=\"top-end\"\n                      style=\"\n                        position: absolute;\n                        will-change: transform;\n                        top: 0px;\n                        left: 0px;\n                        transform: translate3d(72px, -2px, 0px);\n                      \"\n                    >\n                      <a\n                        class=\"dropdown-item\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        (click)=\"onRowSelect(rowData)\"\n                        ><i class=\"fa fa-pencil m-r-5\"></i> Edit</a\n                      >\n                      <a\n                        class=\"dropdown-item\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        (click)=\"delete(rowData)\"\n                        ><i class=\"fas fa-toggle-on\"></i>Active</a\n                      >\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td colspan=\"4\" style=\"text-align: left;\">\n                  No Free Email Domain found.\n                </td>\n              </tr>\n            </ng-template>\n          </p-table>\n        </div>\n      </p-tabPanel>\n    </p-tabView>\n  </div>\n  <!-- /Page Content -->\n\n  <div\n    class=\"modal custom-modal fade\"\n    id=\"delete_Domain\"\n    role=\"dialog\"\n    aria-modal=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n        <div class=\"modal-body\">\n          <div class=\"form-header\">\n            <h3>Inactive Free Email Domain</h3>\n            <p>Are you sure want to Inactive the free Email Domain?</p>\n          </div>\n          <div class=\"modal-btn delete-action\">\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <a\n                  href=\"javascript:void(0);\"\n                  data-dismiss=\"modal\"\n                  (click)=\"delete(fEDomain)\"\n                  class=\"btn btn-primary continue-btn\"\n                  >Inactivate</a\n                >\n              </div>\n              <div class=\"col-6\">\n                <a\n                  href=\"javascript:void(0);\"\n                  data-dismiss=\"modal\"\n                  class=\"btn btn-primary cancel-btn\"\n                  >Cancel</a\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"displayDialog\">\n    <app-edit-freeemaildomain\n      [fEDomainType]=\"fEDomainType\"\n      [fEDomain]=\"fEDomain\"\n      (onClose)=\"onFEDomainCloseClick($event)\"\n    ></app-edit-freeemaildomain>\n  </ng-container>\n</div>\n","import { Component, OnInit, Input, ViewChild, ElementRef } from \"@angular/core\";\n\nimport { ConfirmationService } from \"src/app/components/api/confirmationservice\";\nimport { OrganizationService } from \"./organization.service\";\nimport { Department } from \"@app/shared/models/department.model\";\nimport { Organization } from \"@app/shared/models/organization.model\";\nimport { SendMessage } from \"@app/shared/models/sendmessage.model\";\nimport { SharedService } from \"@app/shared/shared.service\";\n@Component({\n  selector: \"app-organization\",\n  templateUrl: \"./organization.component.html\",\n  styleUrls: [\"./organization.component.css\"],\n})\nexport class OrganizationComponent implements OnInit {\n  cols: any[];\n  displayDialog: boolean;\n  clientErrorMsg: any;\n  public editemployeeDisplay: string = \"none\";\n  public addemployeeDisplay: string = \"none\";\n  departmentType: string;\n  organization: Organization;\n  lstOrganizations: Organization[];\n  loading: boolean = false;\n  status: number;\n  @Input() sendMessage: SendMessage = {};\n  @ViewChild(\"closeBtn\") closeBtn: ElementRef;\n\n  constructor(\n    private confirmationService: ConfirmationService,\n    private sharedService: SharedService,\n    private organizationService: OrganizationService\n  ) {}\n\n  ngOnInit(): void {\n    this.cols = [\n      // { field: 'departmentDetailsId', header: 'ID' },\n      { field: \"organizationName\", header: \"Name\" },\n      { field: \"phoneNumber\", header: \"Phone Number\" },\n      { field: \"noOfEmployees\", header: \"No of Employees\" },\n    ];\n    this.getOrganizations();\n    this.status = 1;\n  }\n  handleChange(event) {\n    if (event.index == 0) {\n      this.status = 1;\n      this.getOrganizations(1);\n    } else if (event.index == 1) {\n      this.status = 0;\n      this.getOrganizations(0);\n    }\n  }\n  getOrganizations(status: number = 1) {\n    this.loading = true;\n    this.lstOrganizations = [];\n    this.organizationService.getAllOrganizations(status).subscribe(\n      (res) => {\n        this.loading = false;\n        this.lstOrganizations = [];\n        if (res.message == \"Organizations\")\n          this.lstOrganizations = res.responsePayload as Organization[];\n      },\n      (error) => {\n        this.loading = false;\n      }\n    );\n  }\n  showDialogToAdd() {\n    this.departmentType = \"Add\";\n    //this.hiddenScroll();\n  }\n\n  hiddenScroll() {\n    try {\n      let bodyElement = document.getElementById(\"modalbody\") as HTMLElement;\n      if (bodyElement) {\n        bodyElement.classList.add(\"modal-open\");\n      }\n    } catch (ex) {\n      this.clientErrorMsg(ex, \"hiddenScroll\");\n    }\n  }\n\n  displayScroll() {\n    try {\n      let bodyElement = document.getElementById(\"modalbody\") as HTMLElement;\n      if (bodyElement) {\n        bodyElement.classList.remove(\"modal-open\");\n      }\n    } catch (ex) {\n      this.clientErrorMsg(ex, \"displayScroll\");\n    }\n  }\n\n  save() {\n    this.displayScroll();\n  }\n  confirm(rowData) {\n    this.confirmationService.confirm({\n      message: \"Are you sure that you want to Inactivate this data?\",\n      accept: () => {\n        this.delete(rowData);\n        //Actual logic to perform a confirmation\n      },\n    });\n  }\n  delete(rowData: Organization) {\n    if (this.status == 1) {\n      this.organizationService\n        .deactivateOrganization(rowData.organizationDetailsId)\n        .subscribe((res) => {\n          if (res.message == \"Organization deactivate successful\") {\n            this.displayDialog = false;\n            this.getOrganizations(this.status);\n          }\n        });\n    } else {\n      this.organizationService\n        .activateOrganization(rowData.organizationDetailsId)\n        .subscribe((res) => {\n          if (res.message == \"Organization activate successful\") {\n            this.displayDialog = false;\n            this.getOrganizations(this.status);\n          }\n        });\n    }\n  }\n\n  sendMessageToOrganization(rowData: Organization) {\n    if (!this.sendMessage.subject || this.sendMessage.subject.trim() == \"\") {\n      return;\n    }\n    this.sendMessage.organizationDetailsId = rowData.organizationDetailsId;\n    this.organizationService.sendMessage(this.sendMessage).subscribe((res) => {\n      if (res.message == \"Send Communication successful\") {\n        this.sharedService.add({\n          severity: \"success\",\n          summary: \"Success\",\n          detail: res.message,\n        });\n      } else {\n        this.sharedService.add({\n          severity: \"error\",\n          summary: \"Error\",\n          detail: res.message,\n        });\n      }\n    });\n    this.closeBtn.nativeElement.click();\n  }\n\n  onDelete(rowData) {\n    this.organization = rowData;\n  }\n\n  onSendMessage(rowData) {\n    this.organization = rowData;\n  }\n\n  onRowSelect(data: Organization) {\n    this.organization = data;\n    this.departmentType = \"Edit\";\n    this.hiddenScroll();\n  }\n  modalClose() {\n    this.editemployeeDisplay = \"none\";\n    this.displayScroll();\n  }\n}\n","<div class=\"page-wrapper\">\n  <!-- Page Content -->\n  <div class=\"content container-fluid\">\n    <!-- Page Header -->\n    <div class=\"page-header\">\n      <div class=\"row align-items-center\">\n        <div class=\"col\">\n          <ul class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\"><a>Dashboard</a></li>\n            <li class=\"breadcrumb-item active\">Organizations</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <!-- /Page Header -->\n    <!-- /Search Filter -->\n    <p-tabView (onChange)=\"handleChange($event)\">\n      <p-tabPanel header=\"Active Organizations\">\n        <div class=\"col pl-0 pr-0 mt-2\" *ngIf=\"!loading\">\n          <p-table\n            [columns]=\"cols\"\n            [value]=\"lstOrganizations\"\n            [rowsPerPageOptions]=\"[10, 25, 50]\"\n            styleClass=\"ui-table-customers\"\n            #dt\n            [paginator]=\"true\"\n            [rows]=\"10\"\n            [showCurrentPageReport]=\"true\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n            [filterDelay]=\"0\"\n            [globalFilterFields]=\"[\n              'organizationName',\n              'phoneNumber',\n              'noOfEmployees'\n            ]\"\n          >\n            <ng-template pTemplate=\"caption\">\n              .\n              <div class=\"ui-table-globalfilter-container\">\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\n                  placeholder=\"Search\"\n                />\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\" let-columns>\n              <tr>\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n                  {{ col.header }}\n                  <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n                <th class=\"actions\">\n                  Actions\n                </th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n              <tr [pSelectableRow]=\"rowData\">\n                <td *ngFor=\"let col of columns\">\n                  <ng-container *ngIf=\"col.field == 'status'\">\n                    {{ rowData[col.field] }}\n                  </ng-container>\n                  <ng-container *ngIf=\"col.field != 'status'\">\n                    {{ rowData[col.field] }}\n                  </ng-container>\n                </td>\n                <td class=\"actions\">\n                  <div class=\"dropdown dropdown-action\">\n                    <a\n                      href=\"#\"\n                      class=\"action-icon dropdown-toggle\"\n                      data-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                      ><i class=\"material-icons\">more_vert</i></a\n                    >\n                    <div\n                      class=\"dropdown-menu dropdown-menu-right\"\n                      x-placement=\"top-end\"\n                      style=\"\n                        position: absolute;\n                        will-change: transform;\n                        top: 0px;\n                        left: 0px;\n                        transform: translate3d(72px, -2px, 0px);\n                      \"\n                    >\n                      <a\n                        class=\"dropdown-item delete\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        (click)=\"onDelete(rowData)\"\n                        data-target=\"#delete_employee\"\n                        ><i class=\"fa fa-trash-o m-r-5\"></i> Inactive</a\n                      >\n                      <a\n                        class=\"dropdown-item\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        data-target=\"#send_Message\"\n                        (click)=\"onSendMessage(rowData)\"\n                        ><i class=\"fa fa-paper-plane m-r-5\"></i> Send Message</a\n                      >\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td colspan=\"4\" style=\"text-align: left;\">\n                  No departments found.\n                </td>\n              </tr>\n            </ng-template>\n          </p-table>\n        </div>\n      </p-tabPanel>\n      <p-tabPanel header=\"Inactive Organizations\">\n        <div class=\"col pl-0 pr-0 mt-2\" *ngIf=\"!loading\">\n          <p-table\n            [columns]=\"cols\"\n            [value]=\"lstOrganizations\"\n            [rowsPerPageOptions]=\"[10, 25, 50]\"\n            styleClass=\"ui-table-customers\"\n            #dt\n            [paginator]=\"true\"\n            [rows]=\"10\"\n            [showCurrentPageReport]=\"true\"\n            currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n            [filterDelay]=\"0\"\n            [globalFilterFields]=\"[\n              'organizationName',\n              'phoneNumber',\n              'noOfEmployees'\n            ]\"\n          >\n            <ng-template pTemplate=\"caption\">\n              .\n              <div class=\"ui-table-globalfilter-container\">\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\n                  placeholder=\"Search\"\n                />\n              </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\" let-columns>\n              <tr>\n                <th *ngFor=\"let col of columns\" [pSortableColumn]=\"col.field\">\n                  {{ col.header }}\n                  <p-sortIcon [field]=\"col.field\"></p-sortIcon>\n                </th>\n                <th class=\"actions\">\n                  Actions\n                </th>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-columns=\"columns\">\n              <tr [pSelectableRow]=\"rowData\">\n                <td *ngFor=\"let col of columns\">\n                  {{ rowData[col.field] }}\n                  <!-- <ng-container *ngIf=\"col.field=='status'\">\n                                    </ng-container>\n                                    <ng-container *ngIf=\"col.field!='status'\">\n                                        {{rowData[col.field]}}\n                                    </ng-container> -->\n                </td>\n                <td class=\"actions\">\n                  <div class=\"dropdown dropdown-action\">\n                    <a\n                      href=\"#\"\n                      class=\"action-icon dropdown-toggle\"\n                      data-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                      ><i class=\"material-icons\">more_vert</i></a\n                    >\n                    <div\n                      class=\"dropdown-menu dropdown-menu-right\"\n                      x-placement=\"top-end\"\n                      style=\"\n                        position: absolute;\n                        will-change: transform;\n                        top: 0px;\n                        left: 0px;\n                        transform: translate3d(72px, -2px, 0px);\n                      \"\n                    >\n                      <!-- <a class=\"dropdown-item\" href=\"#\" data-toggle=\"modal\"\n                                                (click)=\"onRowSelect(rowData)\"><i class=\"fa fa-pencil m-r-5\"></i>\n                                                Edit</a> -->\n                      <a\n                        class=\"dropdown-item\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        (click)=\"delete(rowData)\"\n                        ><i class=\"fa fa-trash-o m-r-5\"></i> Active</a\n                      >\n                      <a\n                        class=\"dropdown-item\"\n                        href=\"#\"\n                        data-toggle=\"modal\"\n                        data-target=\"#send_Message\"\n                        (click)=\"onSendMessage(rowData)\"\n                        ><i class=\"fa fa-trash-o m-r-5\"></i> Send Message</a\n                      >\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n              <tr>\n                <td colspan=\"4\" style=\"text-align: left;\">\n                  No organizations found.\n                </td>\n              </tr>\n            </ng-template>\n          </p-table>\n        </div>\n      </p-tabPanel>\n    </p-tabView>\n  </div>\n  <div\n    class=\"modal custom-modal fade\"\n    id=\"delete_employee\"\n    role=\"dialog\"\n    aria-modal=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n        <div class=\"modal-body\">\n          <div class=\"form-header\">\n            <h3>Inactive Organization</h3>\n            <p>Are you sure want to Inactive the Organization?</p>\n          </div>\n          <div class=\"modal-btn delete-action\">\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <a\n                  href=\"javascript:void(0);\"\n                  data-dismiss=\"modal\"\n                  (click)=\"delete(organization)\"\n                  class=\"btn btn-primary continue-btn\"\n                  >Inactivate</a\n                >\n              </div>\n              <div class=\"col-6\">\n                <a\n                  href=\"javascript:void(0);\"\n                  data-dismiss=\"modal\"\n                  class=\"btn btn-primary cancel-btn\"\n                  >Cancel</a\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div\n    class=\"modal custom-modal fade\"\n    id=\"send_Message\"\n    role=\"dialog\"\n    aria-modal=\"true\"\n  >\n    <div class=\"modal-dialog modal-dialog-centered\">\n      <div class=\"modal-content\">\n        <div class=\"modal-body\">\n          <div class=\"form-header\">\n            <h3>Send Message</h3>\n          </div>\n          <div class=\"modal-btn delete-action\">\n            <div class=\"row\">\n              <div class=\"col-sm-12\">\n                <div class=\"form-group\">\n                  <label class=\"col-form-label\"\n                    >Subject<span class=\"text-danger\">*</span></label\n                  >\n                  <input\n                    pInputText\n                    class=\"form-control\"\n                    [(ngModel)]=\"sendMessage.subject\"\n                    placeholder=\" \"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"col-sm-12\">\n                <div class=\"form-group\">\n                  <label class=\"col-form-label\"\n                    >Body<span class=\"text-danger\">*</span></label\n                  >\n                  <textarea\n                    rows=\"5\"\n                    cols=\"1\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"sendMessage.messageBody\"\n                    pInputTextarea\n                  ></textarea>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <a\n                  href=\"javascript:void(0);\"\n                  (click)=\"sendMessageToOrganization(organization)\"\n                  class=\"btn btn-primary continue-btn\"\n                  >Send</a\n                >\n              </div>\n              <div class=\"col-6\">\n                <a\n                  href=\"javascript:void(0);\"\n                  data-dismiss=\"modal\"\n                  class=\"btn btn-primary cancel-btn\"\n                  #closeBtn\n                  >Cancel</a\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { OrganizationComponent } from \"./organization/organization.component\";\nimport { FreeemaildomainComponent } from \"./freeemaildomain/freeemaildomain.component\";\nimport { AdminDashboardComponent } from \"@app/admin/admin-dashboard/admin-dashboard.component\";\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"dashboard\", pathMatch: \"full\" },\n  { path: \"dashboard\", component: AdminDashboardComponent },\n  { path: \"organization\", component: OrganizationComponent },\n  { path: \"freeemaildomain\", component: FreeemaildomainComponent },\n];\n\n@NgModule({\n  imports: [RouterModule, RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SupremeAdminRoutingModule {}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ApiResponse } from \"@app/shared/models/api-response.model\";\nimport { FreeEmailDomain } from \"@app/shared/models/freeemaildomain.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FreeEmailDomainServices {\n  constructor(private http: HttpClient) {}\n  getAllFreeEmailDomain(status: number) {\n    return this.http.get<ApiResponse<FreeEmailDomain>>(\n      `api/freeemailproviderdomains/all?status=${status}`\n    );\n  }\n  addFEDomain(fEDomain: any) {\n    return this.http.post<ApiResponse<FreeEmailDomain>>(\n      `api/freeemailproviderdomains/add?freeEmailProviderDomain=${fEDomain.domainName}`,\n      {}\n    );\n  }\n  updateFEDomain(fEDomain: FreeEmailDomain) {\n    return this.http.post<ApiResponse<FreeEmailDomain>>(\n      \"api/freeemailproviderdomains/update\",\n      fEDomain\n    );\n  }\n  activateFEDomain(freeEmailProviderDomainsDetailsId: number) {\n    return this.http.put<ApiResponse<FreeEmailDomain>>(\n      `api/freeemailproviderdomains/activate/${freeEmailProviderDomainsDetailsId}`,\n      {}\n    );\n  }\n  deactivateFEDomain(freeEmailProviderDomainsDetailsId: number) {\n    return this.http.put<ApiResponse<FreeEmailDomain>>(\n      `api/freeemailproviderdomains/deactivate/${freeEmailProviderDomainsDetailsId}`,\n      {}\n    );\n  }\n  isFEDomainExists(freeEmailDomain: string) {\n    return this.http.get<ApiResponse<FreeEmailDomain>>(\n      `api/freeemailproviderdomains/exists?workEmail=${freeEmailDomain}`\n    );\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { FreeEmailDomain } from \"@app/shared/models/freeemaildomain.model\";\nimport { FreeEmailDomainServices } from \"../freeemaildomain.service\";\nimport { SharedService } from \"@app/shared/shared.service\";\n\n@Component({\n  selector: \"app-edit-freeemaildomain\",\n  templateUrl: \"./edit-freeemaildomain.component.html\",\n  styleUrls: [\"./edit-freeemaildomain.component.css\"],\n})\nexport class EditFreeemaildomainComponent implements OnInit {\n  @Input() fEDomainType: string;\n  @Output() onClose = new EventEmitter<any>();\n  displayDialog: boolean = true;\n  @Input() fEDomain: FreeEmailDomain;\n  errLabel: any;\n  clientErrorMsg: any;\n  public freeEmailDisplayDomain: string = \"none\";\n\n  constructor(\n    private fEdomainService: FreeEmailDomainServices,\n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit(): void {\n    this.showDialogToAdd();\n  }\n  showDialogToAdd() {\n    this.freeEmailDisplayDomain = \"block\";\n    this.hiddenScroll();\n  }\n\n  hiddenScroll() {\n    try {\n      let bodyElement = document.getElementById(\"modalbody\") as HTMLElement;\n      if (bodyElement) {\n        bodyElement.classList.add(\"modal-open\");\n      }\n    } catch (ex) {\n      this.clientErrorMsg(ex, \"hiddenScroll\");\n    }\n  }\n\n  displayScroll() {\n    try {\n      let bodyElement = document.getElementById(\"modalbody\") as HTMLElement;\n      if (bodyElement) {\n        bodyElement.classList.remove(\"modal-open\");\n      }\n    } catch (ex) {\n      this.clientErrorMsg(ex, \"displayScroll\");\n    }\n  }\n\n  save() {\n    this.fEdomainService.isFEDomainExists(this.fEDomain.domainName).subscribe(\n      (res) => {\n        if (res.statusCode == 200) {\n          if (this.fEDomainType == \"Add\") {\n            this.addFEDomain(this.fEDomain);\n          } else if (this.fEDomainType == \"Edit\") {\n            this.updateFEDomain(this.fEDomain);\n          }\n        } else {\n          this.errLabel = res.message;\n          this.fEDomain = {\n            domainName: \"\",\n            freeEmailProviderDomainsDetailsId: null,\n            status: null,\n          };\n        }\n      },\n      (error) => {\n        this.errLabel = error;\n      }\n    );\n  }\n  addFEDomain(fEDomain: FreeEmailDomain) {\n    this.fEdomainService.addFEDomain(fEDomain).subscribe((res) => {\n      if (res.statusCode == 200) {\n        this.freeEmailDisplayDomain = \"none\";\n        this.sharedService.add({\n          severity: \"success\",\n          summary: \"Success\",\n          detail: res.message,\n        });\n      }\n      this.displayScroll();\n      this.onClose.emit({ type: \"add\" });\n    });\n  }\n  updateFEDomain(fEDomain: FreeEmailDomain) {\n    this.fEdomainService.updateFEDomain(fEDomain).subscribe((res) => {\n      if ((res.statusCode = 200)) {\n        this.freeEmailDisplayDomain = \"none\";\n        this.sharedService.add({\n          severity: \"success\",\n          summary: \"Success\",\n          detail: res.message,\n        });\n      }\n      this.displayScroll();\n      this.onClose.emit({ type: \"add\" });\n    });\n  }\n  modalClose() {\n    this.freeEmailDisplayDomain = \"none\";\n    this.displayScroll();\n    this.onClose.emit({ type: \"Add\" });\n  }\n}\n","<div\n  [ngStyle]=\"{ display: freeEmailDisplayDomain }\"\n  data-backdrop=\"static\"\n  class=\"modal custom-modal backdrop\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n>\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">{{ fEDomainType }} Free Email Domain</h5>\n        <button type=\"button\" class=\"close\" (click)=\"modalClose()\">\n          <span aria-hidden=\"true\">×</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div>\n          <div class=\"row\" *ngIf=\"errLabel\">\n            <div class=\"col-sm-6\" style=\"color: red;\">\n              {{ errLabel }}\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col\">\n              <div class=\"form-group\">\n                <label class=\"col-form-label\"\n                  >Name <span class=\"text-danger\">*</span></label\n                >\n                <input\n                  pInputText\n                  class=\"form-control\"\n                  [(ngModel)]=\"fEDomain.domainName\"\n                  value=\"\"\n                  type=\"text\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div class=\"submit-section\">\n            <button\n              type=\"button\"\n              [disabled]=\"!fEDomain?.domainName\"\n              class=\"btn btn-primary submit-btn\"\n              data-dismiss=\"modal\"\n              (click)=\"save()\"\n            >\n              <ng-container *ngIf=\"fEDomainType == 'Edit'\">\n                Update\n              </ng-container>\n              <ng-container *ngIf=\"fEDomainType == 'Add'\">\n                Save\n              </ng-container>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiResponse } from '@app/shared/models/api-response.model';\nimport { Department } from '@app/shared/models/department.model';\nimport { Organization } from '@app/shared/models/organization.model';\nimport { SendMessage } from '@app/shared/models/sendmessage.model';\n\n@Injectable({\n    providedIn:'root'\n})\nexport class OrganizationService\n{\n    constructor(private http:HttpClient){\n\n    }\n    getAllOrganizations(status:number){\n        return this.http.get<ApiResponse<Organization>>(`api/sadmin/organizations/get?status=${status}`);\n    }    \n    activateOrganization(organizationDetailsId:number){\n        return this.http.put<ApiResponse<Organization>>(`api/sadmin/organization/activate/${organizationDetailsId}`,{})\n    }\n    deactivateOrganization(organizationDetailsId:number){\n        return this.http.put<ApiResponse<Organization>>(`api/sadmin/organization/deactivate/${organizationDetailsId}?reason='reason'`,{})\n    }\n    sendMessage(sendMessage:SendMessage){\n        return this.http.post<ApiResponse<any>>(`api/sadmin/organization/communication/send`,sendMessage)\n    }\n}"]}